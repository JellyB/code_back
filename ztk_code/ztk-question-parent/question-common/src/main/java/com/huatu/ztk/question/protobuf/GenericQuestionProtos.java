// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GenericQuestion.proto

package com.huatu.ztk.question.protobuf;

public final class GenericQuestionProtos {
  private GenericQuestionProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GenericQuestionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GenericQuestion)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *试题id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *试题id
     * </pre>
     */
    int getId();

    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *试题类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *试题类型
     * </pre>
     */
    int getType();

    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    boolean hasStem();
    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    String getStem();
    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    com.google.protobuf.ByteString
        getStemBytes();

    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    boolean hasFrom();
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    String getFrom();
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    com.google.protobuf.ByteString
        getFromBytes();

    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    boolean hasYear();
    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    int getYear();

    /**
     * <code>required int32 area = 6;</code>
     *
     * <pre>
     *试题所属地区
     * </pre>
     */
    boolean hasArea();
    /**
     * <code>required int32 area = 6;</code>
     *
     * <pre>
     *试题所属地区
     * </pre>
     */
    int getArea();

    /**
     * <code>required int32 status = 7;</code>
     *
     * <pre>
     *试题状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 7;</code>
     *
     * <pre>
     *试题状态
     * </pre>
     */
    int getStatus();

    /**
     * <code>required int32 answer = 8;</code>
     *
     * <pre>
     *标准答案
     * </pre>
     */
    boolean hasAnswer();
    /**
     * <code>required int32 answer = 8;</code>
     *
     * <pre>
     *标准答案
     * </pre>
     */
    int getAnswer();

    /**
     * <code>repeated string choices = 9;</code>
     *
     * <pre>
     *选项列表
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getChoicesList();
    /**
     * <code>repeated string choices = 9;</code>
     *
     * <pre>
     *选项列表
     * </pre>
     */
    int getChoicesCount();
    /**
     * <code>repeated string choices = 9;</code>
     *
     * <pre>
     *选项列表
     * </pre>
     */
    String getChoices(int index);
    /**
     * <code>repeated string choices = 9;</code>
     *
     * <pre>
     *选项列表
     * </pre>
     */
    com.google.protobuf.ByteString
        getChoicesBytes(int index);

    /**
     * <code>required string analysis = 10;</code>
     *
     * <pre>
     *解析
     * </pre>
     */
    boolean hasAnalysis();
    /**
     * <code>required string analysis = 10;</code>
     *
     * <pre>
     *解析
     * </pre>
     */
    String getAnalysis();
    /**
     * <code>required string analysis = 10;</code>
     *
     * <pre>
     *解析
     * </pre>
     */
    com.google.protobuf.ByteString
        getAnalysisBytes();

    /**
     * <code>required int32 difficult = 11;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    boolean hasDifficult();
    /**
     * <code>required int32 difficult = 11;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    int getDifficult();

    /**
     * <code>repeated int32 points = 12;</code>
     *
     * <pre>
     *知识点id
     * </pre>
     */
    java.util.List<Integer> getPointsList();
    /**
     * <code>repeated int32 points = 12;</code>
     *
     * <pre>
     *知识点id
     * </pre>
     */
    int getPointsCount();
    /**
     * <code>repeated int32 points = 12;</code>
     *
     * <pre>
     *知识点id
     * </pre>
     */
    int getPoints(int index);

    /**
     * <code>optional int32 parent = 13;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    boolean hasParent();
    /**
     * <code>optional int32 parent = 13;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    int getParent();

    /**
     * <code>optional string material = 14;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    boolean hasMaterial();
    /**
     * <code>optional string material = 14;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    String getMaterial();
    /**
     * <code>optional string material = 14;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    com.google.protobuf.ByteString
        getMaterialBytes();

    /**
     * <code>required int32 subject = 15;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    boolean hasSubject();
    /**
     * <code>required int32 subject = 15;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    int getSubject();

    /**
     * <code>repeated string pointsName = 16;</code>
     *
     * <pre>
     *考点名称
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getPointsNameList();
    /**
     * <code>repeated string pointsName = 16;</code>
     *
     * <pre>
     *考点名称
     * </pre>
     */
    int getPointsNameCount();
    /**
     * <code>repeated string pointsName = 16;</code>
     *
     * <pre>
     *考点名称
     * </pre>
     */
    String getPointsName(int index);
    /**
     * <code>repeated string pointsName = 16;</code>
     *
     * <pre>
     *考点名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getPointsNameBytes(int index);

    /**
     * <code>required int32 mode = 17;</code>
     *
     * <pre>
     *试题类型 真题,模拟题
     * </pre>
     */
    boolean hasMode();
    /**
     * <code>required int32 mode = 17;</code>
     *
     * <pre>
     *试题类型 真题,模拟题
     * </pre>
     */
    int getMode();

    /**
     * <code>required int64 createTime = 18;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>required int64 createTime = 18;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    long getCreateTime();

    /**
     * <code>required int64 createBy = 19;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    boolean hasCreateBy();
    /**
     * <code>required int64 createBy = 19;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    long getCreateBy();

    /**
     * <code>repeated string materials = 20;</code>
     *
     * <pre>
     *材料列表
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getMaterialsList();
    /**
     * <code>repeated string materials = 20;</code>
     *
     * <pre>
     *材料列表
     * </pre>
     */
    int getMaterialsCount();
    /**
     * <code>repeated string materials = 20;</code>
     *
     * <pre>
     *材料列表
     * </pre>
     */
    String getMaterials(int index);
    /**
     * <code>repeated string materials = 20;</code>
     *
     * <pre>
     *材料列表
     * </pre>
     */
    com.google.protobuf.ByteString
        getMaterialsBytes(int index);

    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    boolean hasTeachType();
    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    String getTeachType();
    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeachTypeBytes();

    /**
     * <code>optional float score = 22;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 22;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    float getScore();

    /**
     * <code>optional int32 recommendedTime = 23;</code>
     *
     * <pre>
     *推荐用时
     * </pre>
     */
    boolean hasRecommendedTime();
    /**
     * <code>optional int32 recommendedTime = 23;</code>
     *
     * <pre>
     *推荐用时
     * </pre>
     */
    int getRecommendedTime();

    /**
     * <code>optional string extend = 24;</code>
     *
     * <pre>
     *拓展内容
     * </pre>
     */
    boolean hasExtend();
    /**
     * <code>optional string extend = 24;</code>
     *
     * <pre>
     *拓展内容
     * </pre>
     */
    String getExtend();
    /**
     * <code>optional string extend = 24;</code>
     *
     * <pre>
     *拓展内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtendBytes();

    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    java.util.List<KnowledgeProtos.KnowledgeProto>
        getPointListList();
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto getPointList(int index);
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    int getPointListCount();
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    java.util.List<? extends KnowledgeProtos.KnowledgeProtoOrBuilder>
        getPointListOrBuilderList();
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder getPointListOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code GenericQuestion}
   */
  public static final class GenericQuestion extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:GenericQuestion)
      GenericQuestionOrBuilder {
    // Use GenericQuestion.newBuilder() to construct.
    private GenericQuestion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GenericQuestion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GenericQuestion defaultInstance;
    public static GenericQuestion getDefaultInstance() {
      return defaultInstance;
    }

    public GenericQuestion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GenericQuestion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              stem_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              from_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              year_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              area_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              status_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              answer_ = input.readInt32();
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                choices_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000100;
              }
              choices_.add(bs);
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              analysis_ = bs;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              difficult_ = input.readInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                points_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              points_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                points_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                points_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              parent_ = input.readInt32();
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              material_ = bs;
              break;
            }
            case 120: {
              bitField0_ |= 0x00001000;
              subject_ = input.readInt32();
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                pointsName_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00008000;
              }
              pointsName_.add(bs);
              break;
            }
            case 136: {
              bitField0_ |= 0x00002000;
              mode_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00004000;
              createTime_ = input.readInt64();
              break;
            }
            case 152: {
              bitField0_ |= 0x00008000;
              createBy_ = input.readInt64();
              break;
            }
            case 162: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                materials_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00080000;
              }
              materials_.add(bs);
              break;
            }
            case 170: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00010000;
              teachType_ = bs;
              break;
            }
            case 181: {
              bitField0_ |= 0x00020000;
              score_ = input.readFloat();
              break;
            }
            case 184: {
              bitField0_ |= 0x00040000;
              recommendedTime_ = input.readInt32();
              break;
            }
            case 194: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00080000;
              extend_ = bs;
              break;
            }
            case 202: {
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
                pointList_ = new java.util.ArrayList<KnowledgeProtos.KnowledgeProto>();
                mutable_bitField0_ |= 0x01000000;
              }
              pointList_.add(input.readMessage(com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          choices_ = choices_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          pointsName_ = pointsName_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          materials_ = materials_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
          pointList_ = java.util.Collections.unmodifiableList(pointList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.huatu.ztk.question.protobuf.GenericQuestionProtos.internal_static_GenericQuestion_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.huatu.ztk.question.protobuf.GenericQuestionProtos.internal_static_GenericQuestion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion.class, com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion.Builder.class);
    }

    public static com.google.protobuf.Parser<GenericQuestion> PARSER =
        new com.google.protobuf.AbstractParser<GenericQuestion>() {
      public GenericQuestion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GenericQuestion(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<GenericQuestion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *试题id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *试题id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *试题类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *试题类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    public static final int STEM_FIELD_NUMBER = 3;
    private Object stem_;
    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    public boolean hasStem() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    public String getStem() {
      Object ref = stem_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stem_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStemBytes() {
      Object ref = stem_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        stem_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FROM_FIELD_NUMBER = 4;
    private Object from_;
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    public boolean hasFrom() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    public String getFrom() {
      Object ref = from_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          from_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFromBytes() {
      Object ref = from_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        from_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int YEAR_FIELD_NUMBER = 5;
    private int year_;
    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    public boolean hasYear() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    public int getYear() {
      return year_;
    }

    public static final int AREA_FIELD_NUMBER = 6;
    private int area_;
    /**
     * <code>required int32 area = 6;</code>
     *
     * <pre>
     *试题所属地区
     * </pre>
     */
    public boolean hasArea() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 area = 6;</code>
     *
     * <pre>
     *试题所属地区
     * </pre>
     */
    public int getArea() {
      return area_;
    }

    public static final int STATUS_FIELD_NUMBER = 7;
    private int status_;
    /**
     * <code>required int32 status = 7;</code>
     *
     * <pre>
     *试题状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 status = 7;</code>
     *
     * <pre>
     *试题状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    public static final int ANSWER_FIELD_NUMBER = 8;
    private int answer_;
    /**
     * <code>required int32 answer = 8;</code>
     *
     * <pre>
     *标准答案
     * </pre>
     */
    public boolean hasAnswer() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 answer = 8;</code>
     *
     * <pre>
     *标准答案
     * </pre>
     */
    public int getAnswer() {
      return answer_;
    }

    public static final int CHOICES_FIELD_NUMBER = 9;
    private com.google.protobuf.LazyStringList choices_;
    /**
     * <code>repeated string choices = 9;</code>
     *
     * <pre>
     *选项列表
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getChoicesList() {
      return choices_;
    }
    /**
     * <code>repeated string choices = 9;</code>
     *
     * <pre>
     *选项列表
     * </pre>
     */
    public int getChoicesCount() {
      return choices_.size();
    }
    /**
     * <code>repeated string choices = 9;</code>
     *
     * <pre>
     *选项列表
     * </pre>
     */
    public String getChoices(int index) {
      return choices_.get(index);
    }
    /**
     * <code>repeated string choices = 9;</code>
     *
     * <pre>
     *选项列表
     * </pre>
     */
    public com.google.protobuf.ByteString
        getChoicesBytes(int index) {
      return choices_.getByteString(index);
    }

    public static final int ANALYSIS_FIELD_NUMBER = 10;
    private Object analysis_;
    /**
     * <code>required string analysis = 10;</code>
     *
     * <pre>
     *解析
     * </pre>
     */
    public boolean hasAnalysis() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required string analysis = 10;</code>
     *
     * <pre>
     *解析
     * </pre>
     */
    public String getAnalysis() {
      Object ref = analysis_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          analysis_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string analysis = 10;</code>
     *
     * <pre>
     *解析
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAnalysisBytes() {
      Object ref = analysis_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        analysis_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIFFICULT_FIELD_NUMBER = 11;
    private int difficult_;
    /**
     * <code>required int32 difficult = 11;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    public boolean hasDifficult() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 difficult = 11;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    public int getDifficult() {
      return difficult_;
    }

    public static final int POINTS_FIELD_NUMBER = 12;
    private java.util.List<Integer> points_;
    /**
     * <code>repeated int32 points = 12;</code>
     *
     * <pre>
     *知识点id
     * </pre>
     */
    public java.util.List<Integer>
        getPointsList() {
      return points_;
    }
    /**
     * <code>repeated int32 points = 12;</code>
     *
     * <pre>
     *知识点id
     * </pre>
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <code>repeated int32 points = 12;</code>
     *
     * <pre>
     *知识点id
     * </pre>
     */
    public int getPoints(int index) {
      return points_.get(index);
    }

    public static final int PARENT_FIELD_NUMBER = 13;
    private int parent_;
    /**
     * <code>optional int32 parent = 13;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    public boolean hasParent() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 parent = 13;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    public int getParent() {
      return parent_;
    }

    public static final int MATERIAL_FIELD_NUMBER = 14;
    private Object material_;
    /**
     * <code>optional string material = 14;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    public boolean hasMaterial() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string material = 14;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    public String getMaterial() {
      Object ref = material_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          material_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string material = 14;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMaterialBytes() {
      Object ref = material_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        material_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBJECT_FIELD_NUMBER = 15;
    private int subject_;
    /**
     * <code>required int32 subject = 15;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    public boolean hasSubject() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 subject = 15;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    public int getSubject() {
      return subject_;
    }

    public static final int POINTSNAME_FIELD_NUMBER = 16;
    private com.google.protobuf.LazyStringList pointsName_;
    /**
     * <code>repeated string pointsName = 16;</code>
     *
     * <pre>
     *考点名称
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getPointsNameList() {
      return pointsName_;
    }
    /**
     * <code>repeated string pointsName = 16;</code>
     *
     * <pre>
     *考点名称
     * </pre>
     */
    public int getPointsNameCount() {
      return pointsName_.size();
    }
    /**
     * <code>repeated string pointsName = 16;</code>
     *
     * <pre>
     *考点名称
     * </pre>
     */
    public String getPointsName(int index) {
      return pointsName_.get(index);
    }
    /**
     * <code>repeated string pointsName = 16;</code>
     *
     * <pre>
     *考点名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPointsNameBytes(int index) {
      return pointsName_.getByteString(index);
    }

    public static final int MODE_FIELD_NUMBER = 17;
    private int mode_;
    /**
     * <code>required int32 mode = 17;</code>
     *
     * <pre>
     *试题类型 真题,模拟题
     * </pre>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 mode = 17;</code>
     *
     * <pre>
     *试题类型 真题,模拟题
     * </pre>
     */
    public int getMode() {
      return mode_;
    }

    public static final int CREATETIME_FIELD_NUMBER = 18;
    private long createTime_;
    /**
     * <code>required int64 createTime = 18;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int64 createTime = 18;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public long getCreateTime() {
      return createTime_;
    }

    public static final int CREATEBY_FIELD_NUMBER = 19;
    private long createBy_;
    /**
     * <code>required int64 createBy = 19;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public boolean hasCreateBy() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int64 createBy = 19;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public long getCreateBy() {
      return createBy_;
    }

    public static final int MATERIALS_FIELD_NUMBER = 20;
    private com.google.protobuf.LazyStringList materials_;
    /**
     * <code>repeated string materials = 20;</code>
     *
     * <pre>
     *材料列表
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getMaterialsList() {
      return materials_;
    }
    /**
     * <code>repeated string materials = 20;</code>
     *
     * <pre>
     *材料列表
     * </pre>
     */
    public int getMaterialsCount() {
      return materials_.size();
    }
    /**
     * <code>repeated string materials = 20;</code>
     *
     * <pre>
     *材料列表
     * </pre>
     */
    public String getMaterials(int index) {
      return materials_.get(index);
    }
    /**
     * <code>repeated string materials = 20;</code>
     *
     * <pre>
     *材料列表
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMaterialsBytes(int index) {
      return materials_.getByteString(index);
    }

    public static final int TEACHTYPE_FIELD_NUMBER = 21;
    private Object teachType_;
    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    public boolean hasTeachType() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    public String getTeachType() {
      Object ref = teachType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teachType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeachTypeBytes() {
      Object ref = teachType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        teachType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCORE_FIELD_NUMBER = 22;
    private float score_;
    /**
     * <code>optional float score = 22;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional float score = 22;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    public float getScore() {
      return score_;
    }

    public static final int RECOMMENDEDTIME_FIELD_NUMBER = 23;
    private int recommendedTime_;
    /**
     * <code>optional int32 recommendedTime = 23;</code>
     *
     * <pre>
     *推荐用时
     * </pre>
     */
    public boolean hasRecommendedTime() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 recommendedTime = 23;</code>
     *
     * <pre>
     *推荐用时
     * </pre>
     */
    public int getRecommendedTime() {
      return recommendedTime_;
    }

    public static final int EXTEND_FIELD_NUMBER = 24;
    private Object extend_;
    /**
     * <code>optional string extend = 24;</code>
     *
     * <pre>
     *拓展内容
     * </pre>
     */
    public boolean hasExtend() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional string extend = 24;</code>
     *
     * <pre>
     *拓展内容
     * </pre>
     */
    public String getExtend() {
      Object ref = extend_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          extend_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string extend = 24;</code>
     *
     * <pre>
     *拓展内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtendBytes() {
      Object ref = extend_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POINTLIST_FIELD_NUMBER = 25;
    private java.util.List<KnowledgeProtos.KnowledgeProto> pointList_;
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    public java.util.List<KnowledgeProtos.KnowledgeProto> getPointListList() {
      return pointList_;
    }
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    public java.util.List<? extends KnowledgeProtos.KnowledgeProtoOrBuilder>
        getPointListOrBuilderList() {
      return pointList_;
    }
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    public int getPointListCount() {
      return pointList_.size();
    }
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto getPointList(int index) {
      return pointList_.get(index);
    }
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder getPointListOrBuilder(
        int index) {
      return pointList_.get(index);
    }

    private void initFields() {
      id_ = 0;
      type_ = 0;
      stem_ = "";
      from_ = "";
      year_ = 0;
      area_ = 0;
      status_ = 0;
      answer_ = 0;
      choices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      analysis_ = "";
      difficult_ = 0;
      points_ = java.util.Collections.emptyList();
      parent_ = 0;
      material_ = "";
      subject_ = 0;
      pointsName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      mode_ = 0;
      createTime_ = 0L;
      createBy_ = 0L;
      materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      teachType_ = "";
      score_ = 0F;
      recommendedTime_ = 0;
      extend_ = "";
      pointList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStem()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasArea()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAnswer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAnalysis()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDifficult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSubject()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateBy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getStemBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFromBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, year_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, area_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, answer_);
      }
      for (int i = 0; i < choices_.size(); i++) {
        output.writeBytes(9, choices_.getByteString(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getAnalysisBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, difficult_);
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeInt32(12, points_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, parent_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(14, getMaterialBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(15, subject_);
      }
      for (int i = 0; i < pointsName_.size(); i++) {
        output.writeBytes(16, pointsName_.getByteString(i));
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(17, mode_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(18, createTime_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(19, createBy_);
      }
      for (int i = 0; i < materials_.size(); i++) {
        output.writeBytes(20, materials_.getByteString(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(21, getTeachTypeBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeFloat(22, score_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(23, recommendedTime_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBytes(24, getExtendBytes());
      }
      for (int i = 0; i < pointList_.size(); i++) {
        output.writeMessage(25, pointList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getStemBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getFromBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, year_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, area_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, answer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < choices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(choices_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getChoicesList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getAnalysisBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, difficult_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < points_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(points_.get(i));
        }
        size += dataSize;
        size += 1 * getPointsList().size();
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, parent_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getMaterialBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, subject_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pointsName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(pointsName_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getPointsNameList().size();
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, mode_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, createTime_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, createBy_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < materials_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(materials_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getMaterialsList().size();
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(21, getTeachTypeBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, score_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, recommendedTime_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(24, getExtendBytes());
      }
      for (int i = 0; i < pointList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, pointList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GenericQuestion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GenericQuestion)
        com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.huatu.ztk.question.protobuf.GenericQuestionProtos.internal_static_GenericQuestion_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.huatu.ztk.question.protobuf.GenericQuestionProtos.internal_static_GenericQuestion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion.class, com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion.Builder.class);
      }

      // Construct using com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPointListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        stem_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        from_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        year_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        area_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        answer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        choices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        analysis_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        difficult_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        points_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        parent_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        material_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        subject_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        pointsName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00008000);
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        createBy_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00080000);
        teachType_ = "";
        bitField0_ = (bitField0_ & ~0x00100000);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00200000);
        recommendedTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        extend_ = "";
        bitField0_ = (bitField0_ & ~0x00800000);
        if (pointListBuilder_ == null) {
          pointList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x01000000);
        } else {
          pointListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.huatu.ztk.question.protobuf.GenericQuestionProtos.internal_static_GenericQuestion_descriptor;
      }

      public com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion getDefaultInstanceForType() {
        return com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion.getDefaultInstance();
      }

      public com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion build() {
        com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion buildPartial() {
        com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion result = new com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.stem_ = stem_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.from_ = from_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.year_ = year_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.area_ = area_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.answer_ = answer_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          choices_ = choices_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.choices_ = choices_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.analysis_ = analysis_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.difficult_ = difficult_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          points_ = java.util.Collections.unmodifiableList(points_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.points_ = points_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.parent_ = parent_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.material_ = material_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.subject_ = subject_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          pointsName_ = pointsName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.pointsName_ = pointsName_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.createBy_ = createBy_;
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          materials_ = materials_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.materials_ = materials_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.teachType_ = teachType_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.recommendedTime_ = recommendedTime_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.extend_ = extend_;
        if (pointListBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000)) {
            pointList_ = java.util.Collections.unmodifiableList(pointList_);
            bitField0_ = (bitField0_ & ~0x01000000);
          }
          result.pointList_ = pointList_;
        } else {
          result.pointList_ = pointListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion) {
          return mergeFrom((com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion other) {
        if (other == com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasStem()) {
          bitField0_ |= 0x00000004;
          stem_ = other.stem_;
          onChanged();
        }
        if (other.hasFrom()) {
          bitField0_ |= 0x00000008;
          from_ = other.from_;
          onChanged();
        }
        if (other.hasYear()) {
          setYear(other.getYear());
        }
        if (other.hasArea()) {
          setArea(other.getArea());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasAnswer()) {
          setAnswer(other.getAnswer());
        }
        if (!other.choices_.isEmpty()) {
          if (choices_.isEmpty()) {
            choices_ = other.choices_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureChoicesIsMutable();
            choices_.addAll(other.choices_);
          }
          onChanged();
        }
        if (other.hasAnalysis()) {
          bitField0_ |= 0x00000200;
          analysis_ = other.analysis_;
          onChanged();
        }
        if (other.hasDifficult()) {
          setDifficult(other.getDifficult());
        }
        if (!other.points_.isEmpty()) {
          if (points_.isEmpty()) {
            points_ = other.points_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensurePointsIsMutable();
            points_.addAll(other.points_);
          }
          onChanged();
        }
        if (other.hasParent()) {
          setParent(other.getParent());
        }
        if (other.hasMaterial()) {
          bitField0_ |= 0x00002000;
          material_ = other.material_;
          onChanged();
        }
        if (other.hasSubject()) {
          setSubject(other.getSubject());
        }
        if (!other.pointsName_.isEmpty()) {
          if (pointsName_.isEmpty()) {
            pointsName_ = other.pointsName_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensurePointsNameIsMutable();
            pointsName_.addAll(other.pointsName_);
          }
          onChanged();
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasCreateBy()) {
          setCreateBy(other.getCreateBy());
        }
        if (!other.materials_.isEmpty()) {
          if (materials_.isEmpty()) {
            materials_ = other.materials_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureMaterialsIsMutable();
            materials_.addAll(other.materials_);
          }
          onChanged();
        }
        if (other.hasTeachType()) {
          bitField0_ |= 0x00100000;
          teachType_ = other.teachType_;
          onChanged();
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasRecommendedTime()) {
          setRecommendedTime(other.getRecommendedTime());
        }
        if (other.hasExtend()) {
          bitField0_ |= 0x00800000;
          extend_ = other.extend_;
          onChanged();
        }
        if (pointListBuilder_ == null) {
          if (!other.pointList_.isEmpty()) {
            if (pointList_.isEmpty()) {
              pointList_ = other.pointList_;
              bitField0_ = (bitField0_ & ~0x01000000);
            } else {
              ensurePointListIsMutable();
              pointList_.addAll(other.pointList_);
            }
            onChanged();
          }
        } else {
          if (!other.pointList_.isEmpty()) {
            if (pointListBuilder_.isEmpty()) {
              pointListBuilder_.dispose();
              pointListBuilder_ = null;
              pointList_ = other.pointList_;
              bitField0_ = (bitField0_ & ~0x01000000);
              pointListBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPointListFieldBuilder() : null;
            } else {
              pointListBuilder_.addAllMessages(other.pointList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {

          return false;
        }
        if (!hasType()) {

          return false;
        }
        if (!hasStem()) {

          return false;
        }
        if (!hasFrom()) {

          return false;
        }
        if (!hasYear()) {

          return false;
        }
        if (!hasArea()) {

          return false;
        }
        if (!hasStatus()) {

          return false;
        }
        if (!hasAnswer()) {

          return false;
        }
        if (!hasAnalysis()) {

          return false;
        }
        if (!hasDifficult()) {

          return false;
        }
        if (!hasSubject()) {

          return false;
        }
        if (!hasMode()) {

          return false;
        }
        if (!hasCreateTime()) {

          return false;
        }
        if (!hasCreateBy()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.huatu.ztk.question.protobuf.GenericQuestionProtos.GenericQuestion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *试题id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *试题id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *试题id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *试题id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *试题类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *试题类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *试题类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *试题类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      private Object stem_ = "";
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public boolean hasStem() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public String getStem() {
        Object ref = stem_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stem_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStemBytes() {
        Object ref = stem_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          stem_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public Builder setStem(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        stem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public Builder clearStem() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stem_ = getDefaultInstance().getStem();
        onChanged();
        return this;
      }
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public Builder setStemBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        stem_ = value;
        onChanged();
        return this;
      }

      private Object from_ = "";
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public boolean hasFrom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public String getFrom() {
        Object ref = from_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            from_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFromBytes() {
        Object ref = from_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          from_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public Builder setFrom(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public Builder clearFrom() {
        bitField0_ = (bitField0_ & ~0x00000008);
        from_ = getDefaultInstance().getFrom();
        onChanged();
        return this;
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public Builder setFromBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        from_ = value;
        onChanged();
        return this;
      }

      private int year_ ;
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public boolean hasYear() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public int getYear() {
        return year_;
      }
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public Builder setYear(int value) {
        bitField0_ |= 0x00000010;
        year_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public Builder clearYear() {
        bitField0_ = (bitField0_ & ~0x00000010);
        year_ = 0;
        onChanged();
        return this;
      }

      private int area_ ;
      /**
       * <code>required int32 area = 6;</code>
       *
       * <pre>
       *试题所属地区
       * </pre>
       */
      public boolean hasArea() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 area = 6;</code>
       *
       * <pre>
       *试题所属地区
       * </pre>
       */
      public int getArea() {
        return area_;
      }
      /**
       * <code>required int32 area = 6;</code>
       *
       * <pre>
       *试题所属地区
       * </pre>
       */
      public Builder setArea(int value) {
        bitField0_ |= 0x00000020;
        area_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 area = 6;</code>
       *
       * <pre>
       *试题所属地区
       * </pre>
       */
      public Builder clearArea() {
        bitField0_ = (bitField0_ & ~0x00000020);
        area_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>required int32 status = 7;</code>
       *
       * <pre>
       *试题状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 status = 7;</code>
       *
       * <pre>
       *试题状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 7;</code>
       *
       * <pre>
       *试题状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000040;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 status = 7;</code>
       *
       * <pre>
       *试题状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        status_ = 0;
        onChanged();
        return this;
      }

      private int answer_ ;
      /**
       * <code>required int32 answer = 8;</code>
       *
       * <pre>
       *标准答案
       * </pre>
       */
      public boolean hasAnswer() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 answer = 8;</code>
       *
       * <pre>
       *标准答案
       * </pre>
       */
      public int getAnswer() {
        return answer_;
      }
      /**
       * <code>required int32 answer = 8;</code>
       *
       * <pre>
       *标准答案
       * </pre>
       */
      public Builder setAnswer(int value) {
        bitField0_ |= 0x00000080;
        answer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 answer = 8;</code>
       *
       * <pre>
       *标准答案
       * </pre>
       */
      public Builder clearAnswer() {
        bitField0_ = (bitField0_ & ~0x00000080);
        answer_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList choices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureChoicesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          choices_ = new com.google.protobuf.LazyStringArrayList(choices_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated string choices = 9;</code>
       *
       * <pre>
       *选项列表
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getChoicesList() {
        return choices_.getUnmodifiableView();
      }
      /**
       * <code>repeated string choices = 9;</code>
       *
       * <pre>
       *选项列表
       * </pre>
       */
      public int getChoicesCount() {
        return choices_.size();
      }
      /**
       * <code>repeated string choices = 9;</code>
       *
       * <pre>
       *选项列表
       * </pre>
       */
      public String getChoices(int index) {
        return choices_.get(index);
      }
      /**
       * <code>repeated string choices = 9;</code>
       *
       * <pre>
       *选项列表
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChoicesBytes(int index) {
        return choices_.getByteString(index);
      }
      /**
       * <code>repeated string choices = 9;</code>
       *
       * <pre>
       *选项列表
       * </pre>
       */
      public Builder setChoices(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChoicesIsMutable();
        choices_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string choices = 9;</code>
       *
       * <pre>
       *选项列表
       * </pre>
       */
      public Builder addChoices(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChoicesIsMutable();
        choices_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string choices = 9;</code>
       *
       * <pre>
       *选项列表
       * </pre>
       */
      public Builder addAllChoices(
          Iterable<String> values) {
        ensureChoicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, choices_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string choices = 9;</code>
       *
       * <pre>
       *选项列表
       * </pre>
       */
      public Builder clearChoices() {
        choices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string choices = 9;</code>
       *
       * <pre>
       *选项列表
       * </pre>
       */
      public Builder addChoicesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChoicesIsMutable();
        choices_.add(value);
        onChanged();
        return this;
      }

      private Object analysis_ = "";
      /**
       * <code>required string analysis = 10;</code>
       *
       * <pre>
       *解析
       * </pre>
       */
      public boolean hasAnalysis() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required string analysis = 10;</code>
       *
       * <pre>
       *解析
       * </pre>
       */
      public String getAnalysis() {
        Object ref = analysis_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            analysis_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string analysis = 10;</code>
       *
       * <pre>
       *解析
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAnalysisBytes() {
        Object ref = analysis_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          analysis_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string analysis = 10;</code>
       *
       * <pre>
       *解析
       * </pre>
       */
      public Builder setAnalysis(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        analysis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string analysis = 10;</code>
       *
       * <pre>
       *解析
       * </pre>
       */
      public Builder clearAnalysis() {
        bitField0_ = (bitField0_ & ~0x00000200);
        analysis_ = getDefaultInstance().getAnalysis();
        onChanged();
        return this;
      }
      /**
       * <code>required string analysis = 10;</code>
       *
       * <pre>
       *解析
       * </pre>
       */
      public Builder setAnalysisBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        analysis_ = value;
        onChanged();
        return this;
      }

      private int difficult_ ;
      /**
       * <code>required int32 difficult = 11;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public boolean hasDifficult() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 difficult = 11;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public int getDifficult() {
        return difficult_;
      }
      /**
       * <code>required int32 difficult = 11;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public Builder setDifficult(int value) {
        bitField0_ |= 0x00000400;
        difficult_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 difficult = 11;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public Builder clearDifficult() {
        bitField0_ = (bitField0_ & ~0x00000400);
        difficult_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<Integer> points_ = java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          points_ = new java.util.ArrayList<Integer>(points_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 points = 12;</code>
       *
       * <pre>
       *知识点id
       * </pre>
       */
      public java.util.List<Integer>
          getPointsList() {
        return java.util.Collections.unmodifiableList(points_);
      }
      /**
       * <code>repeated int32 points = 12;</code>
       *
       * <pre>
       *知识点id
       * </pre>
       */
      public int getPointsCount() {
        return points_.size();
      }
      /**
       * <code>repeated int32 points = 12;</code>
       *
       * <pre>
       *知识点id
       * </pre>
       */
      public int getPoints(int index) {
        return points_.get(index);
      }
      /**
       * <code>repeated int32 points = 12;</code>
       *
       * <pre>
       *知识点id
       * </pre>
       */
      public Builder setPoints(
          int index, int value) {
        ensurePointsIsMutable();
        points_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 points = 12;</code>
       *
       * <pre>
       *知识点id
       * </pre>
       */
      public Builder addPoints(int value) {
        ensurePointsIsMutable();
        points_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 points = 12;</code>
       *
       * <pre>
       *知识点id
       * </pre>
       */
      public Builder addAllPoints(
          Iterable<? extends Integer> values) {
        ensurePointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, points_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 points = 12;</code>
       *
       * <pre>
       *知识点id
       * </pre>
       */
      public Builder clearPoints() {
        points_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private int parent_ ;
      /**
       * <code>optional int32 parent = 13;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public boolean hasParent() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 parent = 13;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public int getParent() {
        return parent_;
      }
      /**
       * <code>optional int32 parent = 13;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public Builder setParent(int value) {
        bitField0_ |= 0x00001000;
        parent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 parent = 13;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public Builder clearParent() {
        bitField0_ = (bitField0_ & ~0x00001000);
        parent_ = 0;
        onChanged();
        return this;
      }

      private Object material_ = "";
      /**
       * <code>optional string material = 14;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public boolean hasMaterial() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string material = 14;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public String getMaterial() {
        Object ref = material_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            material_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string material = 14;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMaterialBytes() {
        Object ref = material_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          material_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string material = 14;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public Builder setMaterial(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        material_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string material = 14;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public Builder clearMaterial() {
        bitField0_ = (bitField0_ & ~0x00002000);
        material_ = getDefaultInstance().getMaterial();
        onChanged();
        return this;
      }
      /**
       * <code>optional string material = 14;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public Builder setMaterialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        material_ = value;
        onChanged();
        return this;
      }

      private int subject_ ;
      /**
       * <code>required int32 subject = 15;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public boolean hasSubject() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 subject = 15;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public int getSubject() {
        return subject_;
      }
      /**
       * <code>required int32 subject = 15;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public Builder setSubject(int value) {
        bitField0_ |= 0x00004000;
        subject_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 subject = 15;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public Builder clearSubject() {
        bitField0_ = (bitField0_ & ~0x00004000);
        subject_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList pointsName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePointsNameIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          pointsName_ = new com.google.protobuf.LazyStringArrayList(pointsName_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated string pointsName = 16;</code>
       *
       * <pre>
       *考点名称
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getPointsNameList() {
        return pointsName_.getUnmodifiableView();
      }
      /**
       * <code>repeated string pointsName = 16;</code>
       *
       * <pre>
       *考点名称
       * </pre>
       */
      public int getPointsNameCount() {
        return pointsName_.size();
      }
      /**
       * <code>repeated string pointsName = 16;</code>
       *
       * <pre>
       *考点名称
       * </pre>
       */
      public String getPointsName(int index) {
        return pointsName_.get(index);
      }
      /**
       * <code>repeated string pointsName = 16;</code>
       *
       * <pre>
       *考点名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPointsNameBytes(int index) {
        return pointsName_.getByteString(index);
      }
      /**
       * <code>repeated string pointsName = 16;</code>
       *
       * <pre>
       *考点名称
       * </pre>
       */
      public Builder setPointsName(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePointsNameIsMutable();
        pointsName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pointsName = 16;</code>
       *
       * <pre>
       *考点名称
       * </pre>
       */
      public Builder addPointsName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePointsNameIsMutable();
        pointsName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pointsName = 16;</code>
       *
       * <pre>
       *考点名称
       * </pre>
       */
      public Builder addAllPointsName(
          Iterable<String> values) {
        ensurePointsNameIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pointsName_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pointsName = 16;</code>
       *
       * <pre>
       *考点名称
       * </pre>
       */
      public Builder clearPointsName() {
        pointsName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pointsName = 16;</code>
       *
       * <pre>
       *考点名称
       * </pre>
       */
      public Builder addPointsNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePointsNameIsMutable();
        pointsName_.add(value);
        onChanged();
        return this;
      }

      private int mode_ ;
      /**
       * <code>required int32 mode = 17;</code>
       *
       * <pre>
       *试题类型 真题,模拟题
       * </pre>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int32 mode = 17;</code>
       *
       * <pre>
       *试题类型 真题,模拟题
       * </pre>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>required int32 mode = 17;</code>
       *
       * <pre>
       *试题类型 真题,模拟题
       * </pre>
       */
      public Builder setMode(int value) {
        bitField0_ |= 0x00010000;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mode = 17;</code>
       *
       * <pre>
       *试题类型 真题,模拟题
       * </pre>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00010000);
        mode_ = 0;
        onChanged();
        return this;
      }

      private long createTime_ ;
      /**
       * <code>required int64 createTime = 18;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int64 createTime = 18;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>required int64 createTime = 18;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00020000;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 createTime = 18;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00020000);
        createTime_ = 0L;
        onChanged();
        return this;
      }

      private long createBy_ ;
      /**
       * <code>required int64 createBy = 19;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public boolean hasCreateBy() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required int64 createBy = 19;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public long getCreateBy() {
        return createBy_;
      }
      /**
       * <code>required int64 createBy = 19;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder setCreateBy(long value) {
        bitField0_ |= 0x00040000;
        createBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 createBy = 19;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder clearCreateBy() {
        bitField0_ = (bitField0_ & ~0x00040000);
        createBy_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMaterialsIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          materials_ = new com.google.protobuf.LazyStringArrayList(materials_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated string materials = 20;</code>
       *
       * <pre>
       *材料列表
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getMaterialsList() {
        return materials_.getUnmodifiableView();
      }
      /**
       * <code>repeated string materials = 20;</code>
       *
       * <pre>
       *材料列表
       * </pre>
       */
      public int getMaterialsCount() {
        return materials_.size();
      }
      /**
       * <code>repeated string materials = 20;</code>
       *
       * <pre>
       *材料列表
       * </pre>
       */
      public String getMaterials(int index) {
        return materials_.get(index);
      }
      /**
       * <code>repeated string materials = 20;</code>
       *
       * <pre>
       *材料列表
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMaterialsBytes(int index) {
        return materials_.getByteString(index);
      }
      /**
       * <code>repeated string materials = 20;</code>
       *
       * <pre>
       *材料列表
       * </pre>
       */
      public Builder setMaterials(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMaterialsIsMutable();
        materials_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 20;</code>
       *
       * <pre>
       *材料列表
       * </pre>
       */
      public Builder addMaterials(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMaterialsIsMutable();
        materials_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 20;</code>
       *
       * <pre>
       *材料列表
       * </pre>
       */
      public Builder addAllMaterials(
          Iterable<String> values) {
        ensureMaterialsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, materials_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 20;</code>
       *
       * <pre>
       *材料列表
       * </pre>
       */
      public Builder clearMaterials() {
        materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 20;</code>
       *
       * <pre>
       *材料列表
       * </pre>
       */
      public Builder addMaterialsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMaterialsIsMutable();
        materials_.add(value);
        onChanged();
        return this;
      }

      private Object teachType_ = "";
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public boolean hasTeachType() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public String getTeachType() {
        Object ref = teachType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teachType_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeachTypeBytes() {
        Object ref = teachType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          teachType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public Builder setTeachType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        teachType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public Builder clearTeachType() {
        bitField0_ = (bitField0_ & ~0x00100000);
        teachType_ = getDefaultInstance().getTeachType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public Builder setTeachTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        teachType_ = value;
        onChanged();
        return this;
      }

      private float score_ ;
      /**
       * <code>optional float score = 22;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional float score = 22;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 22;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00200000;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 22;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00200000);
        score_ = 0F;
        onChanged();
        return this;
      }

      private int recommendedTime_ ;
      /**
       * <code>optional int32 recommendedTime = 23;</code>
       *
       * <pre>
       *推荐用时
       * </pre>
       */
      public boolean hasRecommendedTime() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 recommendedTime = 23;</code>
       *
       * <pre>
       *推荐用时
       * </pre>
       */
      public int getRecommendedTime() {
        return recommendedTime_;
      }
      /**
       * <code>optional int32 recommendedTime = 23;</code>
       *
       * <pre>
       *推荐用时
       * </pre>
       */
      public Builder setRecommendedTime(int value) {
        bitField0_ |= 0x00400000;
        recommendedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 recommendedTime = 23;</code>
       *
       * <pre>
       *推荐用时
       * </pre>
       */
      public Builder clearRecommendedTime() {
        bitField0_ = (bitField0_ & ~0x00400000);
        recommendedTime_ = 0;
        onChanged();
        return this;
      }

      private Object extend_ = "";
      /**
       * <code>optional string extend = 24;</code>
       *
       * <pre>
       *拓展内容
       * </pre>
       */
      public boolean hasExtend() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional string extend = 24;</code>
       *
       * <pre>
       *拓展内容
       * </pre>
       */
      public String getExtend() {
        Object ref = extend_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            extend_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string extend = 24;</code>
       *
       * <pre>
       *拓展内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtendBytes() {
        Object ref = extend_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string extend = 24;</code>
       *
       * <pre>
       *拓展内容
       * </pre>
       */
      public Builder setExtend(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        extend_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string extend = 24;</code>
       *
       * <pre>
       *拓展内容
       * </pre>
       */
      public Builder clearExtend() {
        bitField0_ = (bitField0_ & ~0x00800000);
        extend_ = getDefaultInstance().getExtend();
        onChanged();
        return this;
      }
      /**
       * <code>optional string extend = 24;</code>
       *
       * <pre>
       *拓展内容
       * </pre>
       */
      public Builder setExtendBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        extend_ = value;
        onChanged();
        return this;
      }

      private java.util.List<KnowledgeProtos.KnowledgeProto> pointList_ =
        java.util.Collections.emptyList();
      private void ensurePointListIsMutable() {
        if (!((bitField0_ & 0x01000000) == 0x01000000)) {
          pointList_ = new java.util.ArrayList<KnowledgeProtos.KnowledgeProto>(pointList_);
          bitField0_ |= 0x01000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          KnowledgeProtos.KnowledgeProto, KnowledgeProtos.KnowledgeProto.Builder, KnowledgeProtos.KnowledgeProtoOrBuilder> pointListBuilder_;

      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public java.util.List<KnowledgeProtos.KnowledgeProto> getPointListList() {
        if (pointListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pointList_);
        } else {
          return pointListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public int getPointListCount() {
        if (pointListBuilder_ == null) {
          return pointList_.size();
        } else {
          return pointListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto getPointList(int index) {
        if (pointListBuilder_ == null) {
          return pointList_.get(index);
        } else {
          return pointListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder setPointList(
          int index, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto value) {
        if (pointListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointListIsMutable();
          pointList_.set(index, value);
          onChanged();
        } else {
          pointListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder setPointList(
          int index, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder builderForValue) {
        if (pointListBuilder_ == null) {
          ensurePointListIsMutable();
          pointList_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder addPointList(com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto value) {
        if (pointListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointListIsMutable();
          pointList_.add(value);
          onChanged();
        } else {
          pointListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder addPointList(
          int index, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto value) {
        if (pointListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointListIsMutable();
          pointList_.add(index, value);
          onChanged();
        } else {
          pointListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder addPointList(
          com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder builderForValue) {
        if (pointListBuilder_ == null) {
          ensurePointListIsMutable();
          pointList_.add(builderForValue.build());
          onChanged();
        } else {
          pointListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder addPointList(
          int index, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder builderForValue) {
        if (pointListBuilder_ == null) {
          ensurePointListIsMutable();
          pointList_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder addAllPointList(
          Iterable<? extends KnowledgeProtos.KnowledgeProto> values) {
        if (pointListBuilder_ == null) {
          ensurePointListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pointList_);
          onChanged();
        } else {
          pointListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder clearPointList() {
        if (pointListBuilder_ == null) {
          pointList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x01000000);
          onChanged();
        } else {
          pointListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder removePointList(int index) {
        if (pointListBuilder_ == null) {
          ensurePointListIsMutable();
          pointList_.remove(index);
          onChanged();
        } else {
          pointListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder getPointListBuilder(
          int index) {
        return getPointListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder getPointListOrBuilder(
          int index) {
        if (pointListBuilder_ == null) {
          return pointList_.get(index);  } else {
          return pointListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public java.util.List<? extends KnowledgeProtos.KnowledgeProtoOrBuilder>
           getPointListOrBuilderList() {
        if (pointListBuilder_ != null) {
          return pointListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pointList_);
        }
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder addPointListBuilder() {
        return getPointListFieldBuilder().addBuilder(
            com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.getDefaultInstance());
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder addPointListBuilder(
          int index) {
        return getPointListFieldBuilder().addBuilder(
            index, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.getDefaultInstance());
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public java.util.List<KnowledgeProtos.KnowledgeProto.Builder>
           getPointListBuilderList() {
        return getPointListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          KnowledgeProtos.KnowledgeProto, KnowledgeProtos.KnowledgeProto.Builder, KnowledgeProtos.KnowledgeProtoOrBuilder>
          getPointListFieldBuilder() {
        if (pointListBuilder_ == null) {
          pointListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              KnowledgeProtos.KnowledgeProto, KnowledgeProtos.KnowledgeProto.Builder, KnowledgeProtos.KnowledgeProtoOrBuilder>(
                  pointList_,
                  ((bitField0_ & 0x01000000) == 0x01000000),
                  getParentForChildren(),
                  isClean());
          pointList_ = null;
        }
        return pointListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:GenericQuestion)
    }

    static {
      defaultInstance = new GenericQuestion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GenericQuestion)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GenericQuestion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GenericQuestion_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\025GenericQuestion.proto\032\017Knowledge.proto" +
      "\"\306\003\n\017GenericQuestion\022\n\n\002id\030\001 \002(\005\022\014\n\004type" +
      "\030\002 \002(\005\022\014\n\004stem\030\003 \002(\t\022\014\n\004from\030\004 \002(\t\022\014\n\004ye" +
      "ar\030\005 \002(\005\022\014\n\004area\030\006 \002(\005\022\016\n\006status\030\007 \002(\005\022\016" +
      "\n\006answer\030\010 \002(\005\022\017\n\007choices\030\t \003(\t\022\020\n\010analy" +
      "sis\030\n \002(\t\022\021\n\tdifficult\030\013 \002(\005\022\016\n\006points\030\014" +
      " \003(\005\022\016\n\006parent\030\r \001(\005\022\020\n\010material\030\016 \001(\t\022\017" +
      "\n\007subject\030\017 \002(\005\022\022\n\npointsName\030\020 \003(\t\022\014\n\004m" +
      "ode\030\021 \002(\005\022\022\n\ncreateTime\030\022 \002(\003\022\020\n\010createB" +
      "y\030\023 \002(\003\022\021\n\tmaterials\030\024 \003(\t\022\021\n\tteachType\030",
      "\025 \001(\t\022\r\n\005score\030\026 \001(\002\022\027\n\017recommendedTime\030" +
      "\027 \001(\005\022\016\n\006extend\030\030 \001(\t\022\"\n\tpointList\030\031 \003(\013" +
      "2\017.KnowledgeProtoB8\n\037com.huatu.ztk.quest" +
      "ion.protobufB\025GenericQuestionProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.huatu.ztk.question.protobuf.KnowledgeProtos.getDescriptor(),
        }, assigner);
    internal_static_GenericQuestion_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_GenericQuestion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_GenericQuestion_descriptor,
        new String[] { "Id", "Type", "Stem", "From", "Year", "Area", "Status", "Answer", "Choices", "Analysis", "Difficult", "Points", "Parent", "Material", "Subject", "PointsName", "Mode", "CreateTime", "CreateBy", "Materials", "TeachType", "Score", "RecommendedTime", "Extend", "PointList", });
    com.huatu.ztk.question.protobuf.KnowledgeProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
