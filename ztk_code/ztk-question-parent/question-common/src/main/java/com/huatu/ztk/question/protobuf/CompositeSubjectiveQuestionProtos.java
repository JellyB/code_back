// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CompositeSubjectiveQuestion.proto

package com.huatu.ztk.question.protobuf;

public final class CompositeSubjectiveQuestionProtos {
  private CompositeSubjectiveQuestionProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CompositeSubjectiveQuestionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CompositeSubjectiveQuestion)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *id
     * </pre>
     */
    int getId();

    /**
     * <code>required int32 area = 2;</code>
     *
     * <pre>
     *区域
     * </pre>
     */
    boolean hasArea();
    /**
     * <code>required int32 area = 2;</code>
     *
     * <pre>
     *区域
     * </pre>
     */
    int getArea();

    /**
     * <code>required int32 type = 3;</code>
     *
     * <pre>
     *题型: 单选,多选,对错,复合题
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 3;</code>
     *
     * <pre>
     *题型: 单选,多选,对错,复合题
     * </pre>
     */
    int getType();

    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    boolean hasFrom();
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    String getFrom();
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    com.google.protobuf.ByteString
        getFromBytes();

    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    boolean hasYear();
    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    int getYear();

    /**
     * <code>repeated string materials = 6;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getMaterialsList();
    /**
     * <code>repeated string materials = 6;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    int getMaterialsCount();
    /**
     * <code>repeated string materials = 6;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    String getMaterials(int index);
    /**
     * <code>repeated string materials = 6;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    com.google.protobuf.ByteString
        getMaterialsBytes(int index);

    /**
     * <code>repeated int32 questions = 7;</code>
     *
     * <pre>
     *复合题子题列表
     * </pre>
     */
    java.util.List<Integer> getQuestionsList();
    /**
     * <code>repeated int32 questions = 7;</code>
     *
     * <pre>
     *复合题子题列表
     * </pre>
     */
    int getQuestionsCount();
    /**
     * <code>repeated int32 questions = 7;</code>
     *
     * <pre>
     *复合题子题列表
     * </pre>
     */
    int getQuestions(int index);

    /**
     * <code>required int32 status = 8;</code>
     *
     * <pre>
     *复合题子题列表
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 8;</code>
     *
     * <pre>
     *复合题子题列表
     * </pre>
     */
    int getStatus();

    /**
     * <code>required int32 subject = 9;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    boolean hasSubject();
    /**
     * <code>required int32 subject = 9;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    int getSubject();

    /**
     * <code>required int32 mode = 10;</code>
     *
     * <pre>
     *试题模式:真题,模拟题
     * </pre>
     */
    boolean hasMode();
    /**
     * <code>required int32 mode = 10;</code>
     *
     * <pre>
     *试题模式:真题,模拟题
     * </pre>
     */
    int getMode();

    /**
     * <code>required int64 createTime = 11;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>required int64 createTime = 11;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    long getCreateTime();

    /**
     * <code>required int64 createBy = 12;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    boolean hasCreateBy();
    /**
     * <code>required int64 createBy = 12;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    long getCreateBy();

    /**
     * <code>required string require = 13;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    boolean hasRequire();
    /**
     * <code>required string require = 13;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    String getRequire();
    /**
     * <code>required string require = 13;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    com.google.protobuf.ByteString
        getRequireBytes();

    /**
     * <code>optional string teachType = 14;</code>
     *
     * <pre>
     *教研题型,可选
     * </pre>
     */
    boolean hasTeachType();
    /**
     * <code>optional string teachType = 14;</code>
     *
     * <pre>
     *教研题型,可选
     * </pre>
     */
    String getTeachType();
    /**
     * <code>optional string teachType = 14;</code>
     *
     * <pre>
     *教研题型,可选
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeachTypeBytes();

    /**
     * <code>optional int32 difficult = 15;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    boolean hasDifficult();
    /**
     * <code>optional int32 difficult = 15;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    int getDifficult();

    /**
     * <code>repeated .CommonQuestion childrens = 16;</code>
     *
     * <pre>
     *子题对象列表
     * </pre>
     */
    java.util.List<CommonQuestionProtos.CommonQuestion>
        getChildrensList();
    /**
     * <code>repeated .CommonQuestion childrens = 16;</code>
     *
     * <pre>
     *子题对象列表
     * </pre>
     */
    com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion getChildrens(int index);
    /**
     * <code>repeated .CommonQuestion childrens = 16;</code>
     *
     * <pre>
     *子题对象列表
     * </pre>
     */
    int getChildrensCount();
    /**
     * <code>repeated .CommonQuestion childrens = 16;</code>
     *
     * <pre>
     *子题对象列表
     * </pre>
     */
    java.util.List<? extends CommonQuestionProtos.CommonQuestionOrBuilder>
        getChildrensOrBuilderList();
    /**
     * <code>repeated .CommonQuestion childrens = 16;</code>
     *
     * <pre>
     *子题对象列表
     * </pre>
     */
    com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestionOrBuilder getChildrensOrBuilder(
            int index);

    /**
     * <code>optional float score = 17;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 17;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    float getScore();
  }
  /**
   * Protobuf type {@code CompositeSubjectiveQuestion}
   */
  public static final class CompositeSubjectiveQuestion extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CompositeSubjectiveQuestion)
      CompositeSubjectiveQuestionOrBuilder {
    // Use CompositeSubjectiveQuestion.newBuilder() to construct.
    private CompositeSubjectiveQuestion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CompositeSubjectiveQuestion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CompositeSubjectiveQuestion defaultInstance;
    public static CompositeSubjectiveQuestion getDefaultInstance() {
      return defaultInstance;
    }

    public CompositeSubjectiveQuestion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CompositeSubjectiveQuestion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              area_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              type_ = input.readInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              from_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              year_ = input.readInt32();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                materials_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000020;
              }
              materials_.add(bs);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                questions_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              questions_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                questions_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                questions_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              status_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              subject_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              mode_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              createTime_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              createBy_ = input.readInt64();
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              require_ = bs;
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              teachType_ = bs;
              break;
            }
            case 120: {
              bitField0_ |= 0x00001000;
              difficult_ = input.readInt32();
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                childrens_ = new java.util.ArrayList<CommonQuestionProtos.CommonQuestion>();
                mutable_bitField0_ |= 0x00008000;
              }
              childrens_.add(input.readMessage(com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion.PARSER, extensionRegistry));
              break;
            }
            case 141: {
              bitField0_ |= 0x00002000;
              score_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          materials_ = materials_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          questions_ = java.util.Collections.unmodifiableList(questions_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          childrens_ = java.util.Collections.unmodifiableList(childrens_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.internal_static_CompositeSubjectiveQuestion_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.internal_static_CompositeSubjectiveQuestion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion.class, com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion.Builder.class);
    }

    public static com.google.protobuf.Parser<CompositeSubjectiveQuestion> PARSER =
        new com.google.protobuf.AbstractParser<CompositeSubjectiveQuestion>() {
      public CompositeSubjectiveQuestion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CompositeSubjectiveQuestion(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<CompositeSubjectiveQuestion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    public static final int AREA_FIELD_NUMBER = 2;
    private int area_;
    /**
     * <code>required int32 area = 2;</code>
     *
     * <pre>
     *区域
     * </pre>
     */
    public boolean hasArea() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 area = 2;</code>
     *
     * <pre>
     *区域
     * </pre>
     */
    public int getArea() {
      return area_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>required int32 type = 3;</code>
     *
     * <pre>
     *题型: 单选,多选,对错,复合题
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 type = 3;</code>
     *
     * <pre>
     *题型: 单选,多选,对错,复合题
     * </pre>
     */
    public int getType() {
      return type_;
    }

    public static final int FROM_FIELD_NUMBER = 4;
    private Object from_;
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    public boolean hasFrom() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    public String getFrom() {
      Object ref = from_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          from_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFromBytes() {
      Object ref = from_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        from_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int YEAR_FIELD_NUMBER = 5;
    private int year_;
    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    public boolean hasYear() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    public int getYear() {
      return year_;
    }

    public static final int MATERIALS_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList materials_;
    /**
     * <code>repeated string materials = 6;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getMaterialsList() {
      return materials_;
    }
    /**
     * <code>repeated string materials = 6;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    public int getMaterialsCount() {
      return materials_.size();
    }
    /**
     * <code>repeated string materials = 6;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    public String getMaterials(int index) {
      return materials_.get(index);
    }
    /**
     * <code>repeated string materials = 6;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMaterialsBytes(int index) {
      return materials_.getByteString(index);
    }

    public static final int QUESTIONS_FIELD_NUMBER = 7;
    private java.util.List<Integer> questions_;
    /**
     * <code>repeated int32 questions = 7;</code>
     *
     * <pre>
     *复合题子题列表
     * </pre>
     */
    public java.util.List<Integer>
        getQuestionsList() {
      return questions_;
    }
    /**
     * <code>repeated int32 questions = 7;</code>
     *
     * <pre>
     *复合题子题列表
     * </pre>
     */
    public int getQuestionsCount() {
      return questions_.size();
    }
    /**
     * <code>repeated int32 questions = 7;</code>
     *
     * <pre>
     *复合题子题列表
     * </pre>
     */
    public int getQuestions(int index) {
      return questions_.get(index);
    }

    public static final int STATUS_FIELD_NUMBER = 8;
    private int status_;
    /**
     * <code>required int32 status = 8;</code>
     *
     * <pre>
     *复合题子题列表
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 status = 8;</code>
     *
     * <pre>
     *复合题子题列表
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    public static final int SUBJECT_FIELD_NUMBER = 9;
    private int subject_;
    /**
     * <code>required int32 subject = 9;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    public boolean hasSubject() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 subject = 9;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    public int getSubject() {
      return subject_;
    }

    public static final int MODE_FIELD_NUMBER = 10;
    private int mode_;
    /**
     * <code>required int32 mode = 10;</code>
     *
     * <pre>
     *试题模式:真题,模拟题
     * </pre>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 mode = 10;</code>
     *
     * <pre>
     *试题模式:真题,模拟题
     * </pre>
     */
    public int getMode() {
      return mode_;
    }

    public static final int CREATETIME_FIELD_NUMBER = 11;
    private long createTime_;
    /**
     * <code>required int64 createTime = 11;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int64 createTime = 11;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public long getCreateTime() {
      return createTime_;
    }

    public static final int CREATEBY_FIELD_NUMBER = 12;
    private long createBy_;
    /**
     * <code>required int64 createBy = 12;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public boolean hasCreateBy() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int64 createBy = 12;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public long getCreateBy() {
      return createBy_;
    }

    public static final int REQUIRE_FIELD_NUMBER = 13;
    private Object require_;
    /**
     * <code>required string require = 13;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    public boolean hasRequire() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required string require = 13;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    public String getRequire() {
      Object ref = require_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          require_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string require = 13;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRequireBytes() {
      Object ref = require_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        require_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEACHTYPE_FIELD_NUMBER = 14;
    private Object teachType_;
    /**
     * <code>optional string teachType = 14;</code>
     *
     * <pre>
     *教研题型,可选
     * </pre>
     */
    public boolean hasTeachType() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string teachType = 14;</code>
     *
     * <pre>
     *教研题型,可选
     * </pre>
     */
    public String getTeachType() {
      Object ref = teachType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teachType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string teachType = 14;</code>
     *
     * <pre>
     *教研题型,可选
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeachTypeBytes() {
      Object ref = teachType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        teachType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIFFICULT_FIELD_NUMBER = 15;
    private int difficult_;
    /**
     * <code>optional int32 difficult = 15;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    public boolean hasDifficult() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 difficult = 15;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    public int getDifficult() {
      return difficult_;
    }

    public static final int CHILDRENS_FIELD_NUMBER = 16;
    private java.util.List<CommonQuestionProtos.CommonQuestion> childrens_;
    /**
     * <code>repeated .CommonQuestion childrens = 16;</code>
     *
     * <pre>
     *子题对象列表
     * </pre>
     */
    public java.util.List<CommonQuestionProtos.CommonQuestion> getChildrensList() {
      return childrens_;
    }
    /**
     * <code>repeated .CommonQuestion childrens = 16;</code>
     *
     * <pre>
     *子题对象列表
     * </pre>
     */
    public java.util.List<? extends CommonQuestionProtos.CommonQuestionOrBuilder>
        getChildrensOrBuilderList() {
      return childrens_;
    }
    /**
     * <code>repeated .CommonQuestion childrens = 16;</code>
     *
     * <pre>
     *子题对象列表
     * </pre>
     */
    public int getChildrensCount() {
      return childrens_.size();
    }
    /**
     * <code>repeated .CommonQuestion childrens = 16;</code>
     *
     * <pre>
     *子题对象列表
     * </pre>
     */
    public com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion getChildrens(int index) {
      return childrens_.get(index);
    }
    /**
     * <code>repeated .CommonQuestion childrens = 16;</code>
     *
     * <pre>
     *子题对象列表
     * </pre>
     */
    public com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestionOrBuilder getChildrensOrBuilder(
        int index) {
      return childrens_.get(index);
    }

    public static final int SCORE_FIELD_NUMBER = 17;
    private float score_;
    /**
     * <code>optional float score = 17;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float score = 17;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    public float getScore() {
      return score_;
    }

    private void initFields() {
      id_ = 0;
      area_ = 0;
      type_ = 0;
      from_ = "";
      year_ = 0;
      materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      questions_ = java.util.Collections.emptyList();
      status_ = 0;
      subject_ = 0;
      mode_ = 0;
      createTime_ = 0L;
      createBy_ = 0L;
      require_ = "";
      teachType_ = "";
      difficult_ = 0;
      childrens_ = java.util.Collections.emptyList();
      score_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasArea()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSubject()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateBy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequire()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getChildrensCount(); i++) {
        if (!getChildrens(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, area_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, type_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFromBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, year_);
      }
      for (int i = 0; i < materials_.size(); i++) {
        output.writeBytes(6, materials_.getByteString(i));
      }
      for (int i = 0; i < questions_.size(); i++) {
        output.writeInt32(7, questions_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, status_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, subject_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, mode_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(11, createTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(12, createBy_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(13, getRequireBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(14, getTeachTypeBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(15, difficult_);
      }
      for (int i = 0; i < childrens_.size(); i++) {
        output.writeMessage(16, childrens_.get(i));
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(17, score_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, area_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getFromBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, year_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < materials_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(materials_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getMaterialsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < questions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(questions_.get(i));
        }
        size += dataSize;
        size += 1 * getQuestionsList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, status_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, subject_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, mode_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, createTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, createBy_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getRequireBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getTeachTypeBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, difficult_);
      }
      for (int i = 0; i < childrens_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, childrens_.get(i));
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, score_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CompositeSubjectiveQuestion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CompositeSubjectiveQuestion)
        com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.internal_static_CompositeSubjectiveQuestion_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.internal_static_CompositeSubjectiveQuestion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion.class, com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion.Builder.class);
      }

      // Construct using com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChildrensFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        area_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        from_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        year_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        questions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        subject_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        createBy_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        require_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        teachType_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        difficult_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        if (childrensBuilder_ == null) {
          childrens_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          childrensBuilder_.clear();
        }
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.internal_static_CompositeSubjectiveQuestion_descriptor;
      }

      public com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion getDefaultInstanceForType() {
        return com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion.getDefaultInstance();
      }

      public com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion build() {
        com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion buildPartial() {
        com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion result = new com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.area_ = area_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.from_ = from_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.year_ = year_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          materials_ = materials_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.materials_ = materials_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          questions_ = java.util.Collections.unmodifiableList(questions_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.questions_ = questions_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.subject_ = subject_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.createBy_ = createBy_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.require_ = require_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.teachType_ = teachType_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.difficult_ = difficult_;
        if (childrensBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            childrens_ = java.util.Collections.unmodifiableList(childrens_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.childrens_ = childrens_;
        } else {
          result.childrens_ = childrensBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion) {
          return mergeFrom((com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion other) {
        if (other == com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasArea()) {
          setArea(other.getArea());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasFrom()) {
          bitField0_ |= 0x00000008;
          from_ = other.from_;
          onChanged();
        }
        if (other.hasYear()) {
          setYear(other.getYear());
        }
        if (!other.materials_.isEmpty()) {
          if (materials_.isEmpty()) {
            materials_ = other.materials_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureMaterialsIsMutable();
            materials_.addAll(other.materials_);
          }
          onChanged();
        }
        if (!other.questions_.isEmpty()) {
          if (questions_.isEmpty()) {
            questions_ = other.questions_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureQuestionsIsMutable();
            questions_.addAll(other.questions_);
          }
          onChanged();
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasSubject()) {
          setSubject(other.getSubject());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasCreateBy()) {
          setCreateBy(other.getCreateBy());
        }
        if (other.hasRequire()) {
          bitField0_ |= 0x00001000;
          require_ = other.require_;
          onChanged();
        }
        if (other.hasTeachType()) {
          bitField0_ |= 0x00002000;
          teachType_ = other.teachType_;
          onChanged();
        }
        if (other.hasDifficult()) {
          setDifficult(other.getDifficult());
        }
        if (childrensBuilder_ == null) {
          if (!other.childrens_.isEmpty()) {
            if (childrens_.isEmpty()) {
              childrens_ = other.childrens_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureChildrensIsMutable();
              childrens_.addAll(other.childrens_);
            }
            onChanged();
          }
        } else {
          if (!other.childrens_.isEmpty()) {
            if (childrensBuilder_.isEmpty()) {
              childrensBuilder_.dispose();
              childrensBuilder_ = null;
              childrens_ = other.childrens_;
              bitField0_ = (bitField0_ & ~0x00008000);
              childrensBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChildrensFieldBuilder() : null;
            } else {
              childrensBuilder_.addAllMessages(other.childrens_);
            }
          }
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {

          return false;
        }
        if (!hasArea()) {

          return false;
        }
        if (!hasType()) {

          return false;
        }
        if (!hasFrom()) {

          return false;
        }
        if (!hasYear()) {

          return false;
        }
        if (!hasStatus()) {

          return false;
        }
        if (!hasSubject()) {

          return false;
        }
        if (!hasMode()) {

          return false;
        }
        if (!hasCreateTime()) {

          return false;
        }
        if (!hasCreateBy()) {

          return false;
        }
        if (!hasRequire()) {

          return false;
        }
        for (int i = 0; i < getChildrensCount(); i++) {
          if (!getChildrens(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.huatu.ztk.question.protobuf.CompositeSubjectiveQuestionProtos.CompositeSubjectiveQuestion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int area_ ;
      /**
       * <code>required int32 area = 2;</code>
       *
       * <pre>
       *区域
       * </pre>
       */
      public boolean hasArea() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 area = 2;</code>
       *
       * <pre>
       *区域
       * </pre>
       */
      public int getArea() {
        return area_;
      }
      /**
       * <code>required int32 area = 2;</code>
       *
       * <pre>
       *区域
       * </pre>
       */
      public Builder setArea(int value) {
        bitField0_ |= 0x00000002;
        area_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 area = 2;</code>
       *
       * <pre>
       *区域
       * </pre>
       */
      public Builder clearArea() {
        bitField0_ = (bitField0_ & ~0x00000002);
        area_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>required int32 type = 3;</code>
       *
       * <pre>
       *题型: 单选,多选,对错,复合题
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 type = 3;</code>
       *
       * <pre>
       *题型: 单选,多选,对错,复合题
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 3;</code>
       *
       * <pre>
       *题型: 单选,多选,对错,复合题
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 3;</code>
       *
       * <pre>
       *题型: 单选,多选,对错,复合题
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }

      private Object from_ = "";
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public boolean hasFrom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public String getFrom() {
        Object ref = from_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            from_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFromBytes() {
        Object ref = from_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          from_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public Builder setFrom(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public Builder clearFrom() {
        bitField0_ = (bitField0_ & ~0x00000008);
        from_ = getDefaultInstance().getFrom();
        onChanged();
        return this;
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public Builder setFromBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        from_ = value;
        onChanged();
        return this;
      }

      private int year_ ;
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public boolean hasYear() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public int getYear() {
        return year_;
      }
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public Builder setYear(int value) {
        bitField0_ |= 0x00000010;
        year_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public Builder clearYear() {
        bitField0_ = (bitField0_ & ~0x00000010);
        year_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMaterialsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          materials_ = new com.google.protobuf.LazyStringArrayList(materials_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated string materials = 6;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getMaterialsList() {
        return materials_.getUnmodifiableView();
      }
      /**
       * <code>repeated string materials = 6;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public int getMaterialsCount() {
        return materials_.size();
      }
      /**
       * <code>repeated string materials = 6;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public String getMaterials(int index) {
        return materials_.get(index);
      }
      /**
       * <code>repeated string materials = 6;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMaterialsBytes(int index) {
        return materials_.getByteString(index);
      }
      /**
       * <code>repeated string materials = 6;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public Builder setMaterials(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMaterialsIsMutable();
        materials_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 6;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public Builder addMaterials(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMaterialsIsMutable();
        materials_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 6;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public Builder addAllMaterials(
          Iterable<String> values) {
        ensureMaterialsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, materials_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 6;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public Builder clearMaterials() {
        materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 6;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public Builder addMaterialsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMaterialsIsMutable();
        materials_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<Integer> questions_ = java.util.Collections.emptyList();
      private void ensureQuestionsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          questions_ = new java.util.ArrayList<Integer>(questions_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 questions = 7;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public java.util.List<Integer>
          getQuestionsList() {
        return java.util.Collections.unmodifiableList(questions_);
      }
      /**
       * <code>repeated int32 questions = 7;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public int getQuestionsCount() {
        return questions_.size();
      }
      /**
       * <code>repeated int32 questions = 7;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public int getQuestions(int index) {
        return questions_.get(index);
      }
      /**
       * <code>repeated int32 questions = 7;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public Builder setQuestions(
          int index, int value) {
        ensureQuestionsIsMutable();
        questions_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 questions = 7;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public Builder addQuestions(int value) {
        ensureQuestionsIsMutable();
        questions_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 questions = 7;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public Builder addAllQuestions(
          Iterable<? extends Integer> values) {
        ensureQuestionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, questions_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 questions = 7;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public Builder clearQuestions() {
        questions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>required int32 status = 8;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 status = 8;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 8;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000080;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 status = 8;</code>
       *
       * <pre>
       *复合题子题列表
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        status_ = 0;
        onChanged();
        return this;
      }

      private int subject_ ;
      /**
       * <code>required int32 subject = 9;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public boolean hasSubject() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 subject = 9;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public int getSubject() {
        return subject_;
      }
      /**
       * <code>required int32 subject = 9;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public Builder setSubject(int value) {
        bitField0_ |= 0x00000100;
        subject_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 subject = 9;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public Builder clearSubject() {
        bitField0_ = (bitField0_ & ~0x00000100);
        subject_ = 0;
        onChanged();
        return this;
      }

      private int mode_ ;
      /**
       * <code>required int32 mode = 10;</code>
       *
       * <pre>
       *试题模式:真题,模拟题
       * </pre>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 mode = 10;</code>
       *
       * <pre>
       *试题模式:真题,模拟题
       * </pre>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>required int32 mode = 10;</code>
       *
       * <pre>
       *试题模式:真题,模拟题
       * </pre>
       */
      public Builder setMode(int value) {
        bitField0_ |= 0x00000200;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mode = 10;</code>
       *
       * <pre>
       *试题模式:真题,模拟题
       * </pre>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000200);
        mode_ = 0;
        onChanged();
        return this;
      }

      private long createTime_ ;
      /**
       * <code>required int64 createTime = 11;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int64 createTime = 11;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>required int64 createTime = 11;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000400;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 createTime = 11;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        createTime_ = 0L;
        onChanged();
        return this;
      }

      private long createBy_ ;
      /**
       * <code>required int64 createBy = 12;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public boolean hasCreateBy() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int64 createBy = 12;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public long getCreateBy() {
        return createBy_;
      }
      /**
       * <code>required int64 createBy = 12;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder setCreateBy(long value) {
        bitField0_ |= 0x00000800;
        createBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 createBy = 12;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder clearCreateBy() {
        bitField0_ = (bitField0_ & ~0x00000800);
        createBy_ = 0L;
        onChanged();
        return this;
      }

      private Object require_ = "";
      /**
       * <code>required string require = 13;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public boolean hasRequire() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required string require = 13;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public String getRequire() {
        Object ref = require_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            require_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string require = 13;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRequireBytes() {
        Object ref = require_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          require_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string require = 13;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public Builder setRequire(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        require_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string require = 13;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public Builder clearRequire() {
        bitField0_ = (bitField0_ & ~0x00001000);
        require_ = getDefaultInstance().getRequire();
        onChanged();
        return this;
      }
      /**
       * <code>required string require = 13;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public Builder setRequireBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        require_ = value;
        onChanged();
        return this;
      }

      private Object teachType_ = "";
      /**
       * <code>optional string teachType = 14;</code>
       *
       * <pre>
       *教研题型,可选
       * </pre>
       */
      public boolean hasTeachType() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string teachType = 14;</code>
       *
       * <pre>
       *教研题型,可选
       * </pre>
       */
      public String getTeachType() {
        Object ref = teachType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teachType_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string teachType = 14;</code>
       *
       * <pre>
       *教研题型,可选
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeachTypeBytes() {
        Object ref = teachType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          teachType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string teachType = 14;</code>
       *
       * <pre>
       *教研题型,可选
       * </pre>
       */
      public Builder setTeachType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        teachType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string teachType = 14;</code>
       *
       * <pre>
       *教研题型,可选
       * </pre>
       */
      public Builder clearTeachType() {
        bitField0_ = (bitField0_ & ~0x00002000);
        teachType_ = getDefaultInstance().getTeachType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string teachType = 14;</code>
       *
       * <pre>
       *教研题型,可选
       * </pre>
       */
      public Builder setTeachTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        teachType_ = value;
        onChanged();
        return this;
      }

      private int difficult_ ;
      /**
       * <code>optional int32 difficult = 15;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public boolean hasDifficult() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 difficult = 15;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public int getDifficult() {
        return difficult_;
      }
      /**
       * <code>optional int32 difficult = 15;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public Builder setDifficult(int value) {
        bitField0_ |= 0x00004000;
        difficult_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 difficult = 15;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public Builder clearDifficult() {
        bitField0_ = (bitField0_ & ~0x00004000);
        difficult_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<CommonQuestionProtos.CommonQuestion> childrens_ =
        java.util.Collections.emptyList();
      private void ensureChildrensIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          childrens_ = new java.util.ArrayList<CommonQuestionProtos.CommonQuestion>(childrens_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          CommonQuestionProtos.CommonQuestion, CommonQuestionProtos.CommonQuestion.Builder, CommonQuestionProtos.CommonQuestionOrBuilder> childrensBuilder_;

      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public java.util.List<CommonQuestionProtos.CommonQuestion> getChildrensList() {
        if (childrensBuilder_ == null) {
          return java.util.Collections.unmodifiableList(childrens_);
        } else {
          return childrensBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public int getChildrensCount() {
        if (childrensBuilder_ == null) {
          return childrens_.size();
        } else {
          return childrensBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion getChildrens(int index) {
        if (childrensBuilder_ == null) {
          return childrens_.get(index);
        } else {
          return childrensBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public Builder setChildrens(
          int index, com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion value) {
        if (childrensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrensIsMutable();
          childrens_.set(index, value);
          onChanged();
        } else {
          childrensBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public Builder setChildrens(
          int index, com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion.Builder builderForValue) {
        if (childrensBuilder_ == null) {
          ensureChildrensIsMutable();
          childrens_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrensBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public Builder addChildrens(com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion value) {
        if (childrensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrensIsMutable();
          childrens_.add(value);
          onChanged();
        } else {
          childrensBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public Builder addChildrens(
          int index, com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion value) {
        if (childrensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrensIsMutable();
          childrens_.add(index, value);
          onChanged();
        } else {
          childrensBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public Builder addChildrens(
          com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion.Builder builderForValue) {
        if (childrensBuilder_ == null) {
          ensureChildrensIsMutable();
          childrens_.add(builderForValue.build());
          onChanged();
        } else {
          childrensBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public Builder addChildrens(
          int index, com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion.Builder builderForValue) {
        if (childrensBuilder_ == null) {
          ensureChildrensIsMutable();
          childrens_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrensBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public Builder addAllChildrens(
          Iterable<? extends CommonQuestionProtos.CommonQuestion> values) {
        if (childrensBuilder_ == null) {
          ensureChildrensIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, childrens_);
          onChanged();
        } else {
          childrensBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public Builder clearChildrens() {
        if (childrensBuilder_ == null) {
          childrens_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          childrensBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public Builder removeChildrens(int index) {
        if (childrensBuilder_ == null) {
          ensureChildrensIsMutable();
          childrens_.remove(index);
          onChanged();
        } else {
          childrensBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion.Builder getChildrensBuilder(
          int index) {
        return getChildrensFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestionOrBuilder getChildrensOrBuilder(
          int index) {
        if (childrensBuilder_ == null) {
          return childrens_.get(index);  } else {
          return childrensBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public java.util.List<? extends CommonQuestionProtos.CommonQuestionOrBuilder>
           getChildrensOrBuilderList() {
        if (childrensBuilder_ != null) {
          return childrensBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(childrens_);
        }
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion.Builder addChildrensBuilder() {
        return getChildrensFieldBuilder().addBuilder(
            com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion.getDefaultInstance());
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion.Builder addChildrensBuilder(
          int index) {
        return getChildrensFieldBuilder().addBuilder(
            index, com.huatu.ztk.question.protobuf.CommonQuestionProtos.CommonQuestion.getDefaultInstance());
      }
      /**
       * <code>repeated .CommonQuestion childrens = 16;</code>
       *
       * <pre>
       *子题对象列表
       * </pre>
       */
      public java.util.List<CommonQuestionProtos.CommonQuestion.Builder>
           getChildrensBuilderList() {
        return getChildrensFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          CommonQuestionProtos.CommonQuestion, CommonQuestionProtos.CommonQuestion.Builder, CommonQuestionProtos.CommonQuestionOrBuilder>
          getChildrensFieldBuilder() {
        if (childrensBuilder_ == null) {
          childrensBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              CommonQuestionProtos.CommonQuestion, CommonQuestionProtos.CommonQuestion.Builder, CommonQuestionProtos.CommonQuestionOrBuilder>(
                  childrens_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          childrens_ = null;
        }
        return childrensBuilder_;
      }

      private float score_ ;
      /**
       * <code>optional float score = 17;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional float score = 17;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 17;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00010000;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 17;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00010000);
        score_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CompositeSubjectiveQuestion)
    }

    static {
      defaultInstance = new CompositeSubjectiveQuestion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CompositeSubjectiveQuestion)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CompositeSubjectiveQuestion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CompositeSubjectiveQuestion_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n!CompositeSubjectiveQuestion.proto\032\024Com" +
      "monQuestion.proto\"\306\002\n\033CompositeSubjectiv" +
      "eQuestion\022\n\n\002id\030\001 \002(\005\022\014\n\004area\030\002 \002(\005\022\014\n\004t" +
      "ype\030\003 \002(\005\022\014\n\004from\030\004 \002(\t\022\014\n\004year\030\005 \002(\005\022\021\n" +
      "\tmaterials\030\006 \003(\t\022\021\n\tquestions\030\007 \003(\005\022\016\n\006s" +
      "tatus\030\010 \002(\005\022\017\n\007subject\030\t \002(\005\022\014\n\004mode\030\n \002" +
      "(\005\022\022\n\ncreateTime\030\013 \002(\003\022\020\n\010createBy\030\014 \002(\003" +
      "\022\017\n\007require\030\r \002(\t\022\021\n\tteachType\030\016 \001(\t\022\021\n\t" +
      "difficult\030\017 \001(\005\022\"\n\tchildrens\030\020 \003(\0132\017.Com" +
      "monQuestion\022\r\n\005score\030\021 \001(\002BD\n\037com.huatu.",
      "ztk.question.protobufB!CompositeSubjecti" +
      "veQuestionProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.huatu.ztk.question.protobuf.CommonQuestionProtos.getDescriptor(),
        }, assigner);
    internal_static_CompositeSubjectiveQuestion_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CompositeSubjectiveQuestion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CompositeSubjectiveQuestion_descriptor,
        new String[] { "Id", "Area", "Type", "From", "Year", "Materials", "Questions", "Status", "Subject", "Mode", "CreateTime", "CreateBy", "Require", "TeachType", "Difficult", "Childrens", "Score", });
    com.huatu.ztk.question.protobuf.CommonQuestionProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
