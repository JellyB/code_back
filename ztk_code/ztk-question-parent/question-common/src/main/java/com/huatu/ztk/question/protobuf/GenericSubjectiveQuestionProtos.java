// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GenericSubjectiveQuestion.proto

package com.huatu.ztk.question.protobuf;

public final class GenericSubjectiveQuestionProtos {
  private GenericSubjectiveQuestionProtos() {}
  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GenericSubjectiveQuestionOrBuilder extends
          // @@protoc_insertion_point(interface_extends:GenericSubjectiveQuestion)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *试题id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *试题id
     * </pre>
     */
    int getId();

    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *试题类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *试题类型
     * </pre>
     */
    int getType();

    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    boolean hasStem();
    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    java.lang.String getStem();
    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    com.google.protobuf.ByteString
    getStemBytes();

    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    boolean hasFrom();
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    java.lang.String getFrom();
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    com.google.protobuf.ByteString
    getFromBytes();

    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    boolean hasYear();
    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    int getYear();

    /**
     * <code>required int32 area = 6;</code>
     *
     * <pre>
     *试题所属地区
     * </pre>
     */
    boolean hasArea();
    /**
     * <code>required int32 area = 6;</code>
     *
     * <pre>
     *试题所属地区
     * </pre>
     */
    int getArea();

    /**
     * <code>required int32 status = 7;</code>
     *
     * <pre>
     *试题状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 7;</code>
     *
     * <pre>
     *试题状态
     * </pre>
     */
    int getStatus();

    /**
     * <code>required string require = 8;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    boolean hasRequire();
    /**
     * <code>required string require = 8;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    java.lang.String getRequire();
    /**
     * <code>required string require = 8;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    com.google.protobuf.ByteString
    getRequireBytes();

    /**
     * <code>required string scoreExplain = 9;</code>
     *
     * <pre>
     *赋分说明
     * </pre>
     */
    boolean hasScoreExplain();
    /**
     * <code>required string scoreExplain = 9;</code>
     *
     * <pre>
     *赋分说明
     * </pre>
     */
    java.lang.String getScoreExplain();
    /**
     * <code>required string scoreExplain = 9;</code>
     *
     * <pre>
     *赋分说明
     * </pre>
     */
    com.google.protobuf.ByteString
    getScoreExplainBytes();

    /**
     * <code>required string referAnalysis = 10;</code>
     *
     * <pre>
     *参考解析
     * </pre>
     */
    boolean hasReferAnalysis();
    /**
     * <code>required string referAnalysis = 10;</code>
     *
     * <pre>
     *参考解析
     * </pre>
     */
    java.lang.String getReferAnalysis();
    /**
     * <code>required string referAnalysis = 10;</code>
     *
     * <pre>
     *参考解析
     * </pre>
     */
    com.google.protobuf.ByteString
    getReferAnalysisBytes();

    /**
     * <code>required string answerRequire = 11;</code>
     *
     * <pre>
     *答题要求
     * </pre>
     */
    boolean hasAnswerRequire();
    /**
     * <code>required string answerRequire = 11;</code>
     *
     * <pre>
     *答题要求
     * </pre>
     */
    java.lang.String getAnswerRequire();
    /**
     * <code>required string answerRequire = 11;</code>
     *
     * <pre>
     *答题要求
     * </pre>
     */
    com.google.protobuf.ByteString
    getAnswerRequireBytes();

    /**
     * <code>required string examPoint = 12;</code>
     *
     * <pre>
     *审题要求
     * </pre>
     */
    boolean hasExamPoint();
    /**
     * <code>required string examPoint = 12;</code>
     *
     * <pre>
     *审题要求
     * </pre>
     */
    java.lang.String getExamPoint();
    /**
     * <code>required string examPoint = 12;</code>
     *
     * <pre>
     *审题要求
     * </pre>
     */
    com.google.protobuf.ByteString
    getExamPointBytes();

    /**
     * <code>required string solvingIdea = 13;</code>
     *
     * <pre>
     *解题思路
     * </pre>
     */
    boolean hasSolvingIdea();
    /**
     * <code>required string solvingIdea = 13;</code>
     *
     * <pre>
     *解题思路
     * </pre>
     */
    java.lang.String getSolvingIdea();
    /**
     * <code>required string solvingIdea = 13;</code>
     *
     * <pre>
     *解题思路
     * </pre>
     */
    com.google.protobuf.ByteString
    getSolvingIdeaBytes();

    /**
     * <code>repeated string materials = 14;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
    getMaterialsList();
    /**
     * <code>repeated string materials = 14;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    int getMaterialsCount();
    /**
     * <code>repeated string materials = 14;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    java.lang.String getMaterials(int index);
    /**
     * <code>repeated string materials = 14;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    com.google.protobuf.ByteString
    getMaterialsBytes(int index);

    /**
     * <code>required int32 difficult = 15;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    boolean hasDifficult();
    /**
     * <code>required int32 difficult = 15;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    int getDifficult();

    /**
     * <code>optional int32 parent = 16;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    boolean hasParent();
    /**
     * <code>optional int32 parent = 16;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    int getParent();

    /**
     * <code>required int32 subject = 17;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    boolean hasSubject();
    /**
     * <code>required int32 subject = 17;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    int getSubject();

    /**
     * <code>required int32 mode = 18;</code>
     *
     * <pre>
     *试题类型 真题,模拟题
     * </pre>
     */
    boolean hasMode();
    /**
     * <code>required int32 mode = 18;</code>
     *
     * <pre>
     *试题类型 真题,模拟题
     * </pre>
     */
    int getMode();

    /**
     * <code>required int64 createTime = 19;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>required int64 createTime = 19;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    long getCreateTime();

    /**
     * <code>required int64 createBy = 20;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    boolean hasCreateBy();
    /**
     * <code>required int64 createBy = 20;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    long getCreateBy();

    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    boolean hasTeachType();
    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    java.lang.String getTeachType();
    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    com.google.protobuf.ByteString
    getTeachTypeBytes();

    /**
     * <code>optional int32 maxWordCount = 22;</code>
     *
     * <pre>
     *最大字数限制
     * </pre>
     */
    boolean hasMaxWordCount();
    /**
     * <code>optional int32 maxWordCount = 22;</code>
     *
     * <pre>
     *最大字数限制
     * </pre>
     */
    int getMaxWordCount();

    /**
     * <code>optional int32 minWordCount = 23;</code>
     *
     * <pre>
     *最小字数限制
     * </pre>
     */
    boolean hasMinWordCount();
    /**
     * <code>optional int32 minWordCount = 23;</code>
     *
     * <pre>
     *最小字数限制
     * </pre>
     */
    int getMinWordCount();

    /**
     * <code>optional float score = 24;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 24;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    float getScore();

    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    java.util.List<com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto>
    getPointListList();
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto getPointList(int index);
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    int getPointListCount();
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    java.util.List<? extends com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder>
    getPointListOrBuilderList();
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder getPointListOrBuilder(
            int index);

    /**
     * <code>optional string extend = 26;</code>
     *
     * <pre>
     *拓展
     * </pre>
     */
    boolean hasExtend();
    /**
     * <code>optional string extend = 26;</code>
     *
     * <pre>
     *拓展
     * </pre>
     */
    java.lang.String getExtend();
    /**
     * <code>optional string extend = 26;</code>
     *
     * <pre>
     *拓展
     * </pre>
     */
    com.google.protobuf.ByteString
    getExtendBytes();
  }
  /**
   * Protobuf type {@code GenericSubjectiveQuestion}
   */
  public static final class GenericSubjectiveQuestion extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:GenericSubjectiveQuestion)
          GenericSubjectiveQuestionOrBuilder {
    // Use GenericSubjectiveQuestion.newBuilder() to construct.
    private GenericSubjectiveQuestion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GenericSubjectiveQuestion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GenericSubjectiveQuestion defaultInstance;
    public static GenericSubjectiveQuestion getDefaultInstance() {
      return defaultInstance;
    }

    public GenericSubjectiveQuestion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GenericSubjectiveQuestion(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              stem_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              from_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              year_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              area_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              status_ = input.readInt32();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              require_ = bs;
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              scoreExplain_ = bs;
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              referAnalysis_ = bs;
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              answerRequire_ = bs;
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              examPoint_ = bs;
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00001000;
              solvingIdea_ = bs;
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                materials_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00002000;
              }
              materials_.add(bs);
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              difficult_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              parent_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              subject_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00010000;
              mode_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00020000;
              createTime_ = input.readInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00040000;
              createBy_ = input.readInt64();
              break;
            }
            case 170: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00080000;
              teachType_ = bs;
              break;
            }
            case 176: {
              bitField0_ |= 0x00100000;
              maxWordCount_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00200000;
              minWordCount_ = input.readInt32();
              break;
            }
            case 197: {
              bitField0_ |= 0x00400000;
              score_ = input.readFloat();
              break;
            }
            case 202: {
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
                pointList_ = new java.util.ArrayList<com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto>();
                mutable_bitField0_ |= 0x01000000;
              }
              pointList_.add(input.readMessage(com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.PARSER, extensionRegistry));
              break;
            }
            case 210: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00800000;
              extend_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          materials_ = materials_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
          pointList_ = java.util.Collections.unmodifiableList(pointList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.internal_static_GenericSubjectiveQuestion_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.internal_static_GenericSubjectiveQuestion_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion.class, com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion.Builder.class);
    }

    public static com.google.protobuf.Parser<GenericSubjectiveQuestion> PARSER =
            new com.google.protobuf.AbstractParser<GenericSubjectiveQuestion>() {
              public GenericSubjectiveQuestion parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new GenericSubjectiveQuestion(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<GenericSubjectiveQuestion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *试题id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *试题id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *试题类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     *试题类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    public static final int STEM_FIELD_NUMBER = 3;
    private java.lang.Object stem_;
    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    public boolean hasStem() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    public java.lang.String getStem() {
      java.lang.Object ref = stem_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stem_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string stem = 3;</code>
     *
     * <pre>
     *题干
     * </pre>
     */
    public com.google.protobuf.ByteString
    getStemBytes() {
      java.lang.Object ref = stem_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        stem_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FROM_FIELD_NUMBER = 4;
    private java.lang.Object from_;
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    public boolean hasFrom() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    public java.lang.String getFrom() {
      java.lang.Object ref = from_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          from_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string from = 4;</code>
     *
     * <pre>
     *来源
     * </pre>
     */
    public com.google.protobuf.ByteString
    getFromBytes() {
      java.lang.Object ref = from_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        from_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int YEAR_FIELD_NUMBER = 5;
    private int year_;
    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    public boolean hasYear() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 year = 5;</code>
     *
     * <pre>
     *试题年份
     * </pre>
     */
    public int getYear() {
      return year_;
    }

    public static final int AREA_FIELD_NUMBER = 6;
    private int area_;
    /**
     * <code>required int32 area = 6;</code>
     *
     * <pre>
     *试题所属地区
     * </pre>
     */
    public boolean hasArea() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 area = 6;</code>
     *
     * <pre>
     *试题所属地区
     * </pre>
     */
    public int getArea() {
      return area_;
    }

    public static final int STATUS_FIELD_NUMBER = 7;
    private int status_;
    /**
     * <code>required int32 status = 7;</code>
     *
     * <pre>
     *试题状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 status = 7;</code>
     *
     * <pre>
     *试题状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    public static final int REQUIRE_FIELD_NUMBER = 8;
    private java.lang.Object require_;
    /**
     * <code>required string require = 8;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    public boolean hasRequire() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required string require = 8;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    public java.lang.String getRequire() {
      java.lang.Object ref = require_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          require_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string require = 8;</code>
     *
     * <pre>
     *题目要求
     * </pre>
     */
    public com.google.protobuf.ByteString
    getRequireBytes() {
      java.lang.Object ref = require_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        require_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCOREEXPLAIN_FIELD_NUMBER = 9;
    private java.lang.Object scoreExplain_;
    /**
     * <code>required string scoreExplain = 9;</code>
     *
     * <pre>
     *赋分说明
     * </pre>
     */
    public boolean hasScoreExplain() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required string scoreExplain = 9;</code>
     *
     * <pre>
     *赋分说明
     * </pre>
     */
    public java.lang.String getScoreExplain() {
      java.lang.Object ref = scoreExplain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scoreExplain_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string scoreExplain = 9;</code>
     *
     * <pre>
     *赋分说明
     * </pre>
     */
    public com.google.protobuf.ByteString
    getScoreExplainBytes() {
      java.lang.Object ref = scoreExplain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        scoreExplain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REFERANALYSIS_FIELD_NUMBER = 10;
    private java.lang.Object referAnalysis_;
    /**
     * <code>required string referAnalysis = 10;</code>
     *
     * <pre>
     *参考解析
     * </pre>
     */
    public boolean hasReferAnalysis() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required string referAnalysis = 10;</code>
     *
     * <pre>
     *参考解析
     * </pre>
     */
    public java.lang.String getReferAnalysis() {
      java.lang.Object ref = referAnalysis_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          referAnalysis_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string referAnalysis = 10;</code>
     *
     * <pre>
     *参考解析
     * </pre>
     */
    public com.google.protobuf.ByteString
    getReferAnalysisBytes() {
      java.lang.Object ref = referAnalysis_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        referAnalysis_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANSWERREQUIRE_FIELD_NUMBER = 11;
    private java.lang.Object answerRequire_;
    /**
     * <code>required string answerRequire = 11;</code>
     *
     * <pre>
     *答题要求
     * </pre>
     */
    public boolean hasAnswerRequire() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required string answerRequire = 11;</code>
     *
     * <pre>
     *答题要求
     * </pre>
     */
    public java.lang.String getAnswerRequire() {
      java.lang.Object ref = answerRequire_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          answerRequire_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string answerRequire = 11;</code>
     *
     * <pre>
     *答题要求
     * </pre>
     */
    public com.google.protobuf.ByteString
    getAnswerRequireBytes() {
      java.lang.Object ref = answerRequire_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        answerRequire_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXAMPOINT_FIELD_NUMBER = 12;
    private java.lang.Object examPoint_;
    /**
     * <code>required string examPoint = 12;</code>
     *
     * <pre>
     *审题要求
     * </pre>
     */
    public boolean hasExamPoint() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required string examPoint = 12;</code>
     *
     * <pre>
     *审题要求
     * </pre>
     */
    public java.lang.String getExamPoint() {
      java.lang.Object ref = examPoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          examPoint_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string examPoint = 12;</code>
     *
     * <pre>
     *审题要求
     * </pre>
     */
    public com.google.protobuf.ByteString
    getExamPointBytes() {
      java.lang.Object ref = examPoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        examPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOLVINGIDEA_FIELD_NUMBER = 13;
    private java.lang.Object solvingIdea_;
    /**
     * <code>required string solvingIdea = 13;</code>
     *
     * <pre>
     *解题思路
     * </pre>
     */
    public boolean hasSolvingIdea() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required string solvingIdea = 13;</code>
     *
     * <pre>
     *解题思路
     * </pre>
     */
    public java.lang.String getSolvingIdea() {
      java.lang.Object ref = solvingIdea_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          solvingIdea_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string solvingIdea = 13;</code>
     *
     * <pre>
     *解题思路
     * </pre>
     */
    public com.google.protobuf.ByteString
    getSolvingIdeaBytes() {
      java.lang.Object ref = solvingIdea_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        solvingIdea_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MATERIALS_FIELD_NUMBER = 14;
    private com.google.protobuf.LazyStringList materials_;
    /**
     * <code>repeated string materials = 14;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
    getMaterialsList() {
      return materials_;
    }
    /**
     * <code>repeated string materials = 14;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    public int getMaterialsCount() {
      return materials_.size();
    }
    /**
     * <code>repeated string materials = 14;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    public java.lang.String getMaterials(int index) {
      return materials_.get(index);
    }
    /**
     * <code>repeated string materials = 14;</code>
     *
     * <pre>
     *材料
     * </pre>
     */
    public com.google.protobuf.ByteString
    getMaterialsBytes(int index) {
      return materials_.getByteString(index);
    }

    public static final int DIFFICULT_FIELD_NUMBER = 15;
    private int difficult_;
    /**
     * <code>required int32 difficult = 15;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    public boolean hasDifficult() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 difficult = 15;</code>
     *
     * <pre>
     *难度系数
     * </pre>
     */
    public int getDifficult() {
      return difficult_;
    }

    public static final int PARENT_FIELD_NUMBER = 16;
    private int parent_;
    /**
     * <code>optional int32 parent = 16;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    public boolean hasParent() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 parent = 16;</code>
     *
     * <pre>
     *所属复合题id
     * </pre>
     */
    public int getParent() {
      return parent_;
    }

    public static final int SUBJECT_FIELD_NUMBER = 17;
    private int subject_;
    /**
     * <code>required int32 subject = 17;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    public boolean hasSubject() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int32 subject = 17;</code>
     *
     * <pre>
     *考试科目
     * </pre>
     */
    public int getSubject() {
      return subject_;
    }

    public static final int MODE_FIELD_NUMBER = 18;
    private int mode_;
    /**
     * <code>required int32 mode = 18;</code>
     *
     * <pre>
     *试题类型 真题,模拟题
     * </pre>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required int32 mode = 18;</code>
     *
     * <pre>
     *试题类型 真题,模拟题
     * </pre>
     */
    public int getMode() {
      return mode_;
    }

    public static final int CREATETIME_FIELD_NUMBER = 19;
    private long createTime_;
    /**
     * <code>required int64 createTime = 19;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required int64 createTime = 19;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public long getCreateTime() {
      return createTime_;
    }

    public static final int CREATEBY_FIELD_NUMBER = 20;
    private long createBy_;
    /**
     * <code>required int64 createBy = 20;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public boolean hasCreateBy() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>required int64 createBy = 20;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public long getCreateBy() {
      return createBy_;
    }

    public static final int TEACHTYPE_FIELD_NUMBER = 21;
    private java.lang.Object teachType_;
    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    public boolean hasTeachType() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    public java.lang.String getTeachType() {
      java.lang.Object ref = teachType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teachType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string teachType = 21;</code>
     *
     * <pre>
     *教研题型
     * </pre>
     */
    public com.google.protobuf.ByteString
    getTeachTypeBytes() {
      java.lang.Object ref = teachType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        teachType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAXWORDCOUNT_FIELD_NUMBER = 22;
    private int maxWordCount_;
    /**
     * <code>optional int32 maxWordCount = 22;</code>
     *
     * <pre>
     *最大字数限制
     * </pre>
     */
    public boolean hasMaxWordCount() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 maxWordCount = 22;</code>
     *
     * <pre>
     *最大字数限制
     * </pre>
     */
    public int getMaxWordCount() {
      return maxWordCount_;
    }

    public static final int MINWORDCOUNT_FIELD_NUMBER = 23;
    private int minWordCount_;
    /**
     * <code>optional int32 minWordCount = 23;</code>
     *
     * <pre>
     *最小字数限制
     * </pre>
     */
    public boolean hasMinWordCount() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 minWordCount = 23;</code>
     *
     * <pre>
     *最小字数限制
     * </pre>
     */
    public int getMinWordCount() {
      return minWordCount_;
    }

    public static final int SCORE_FIELD_NUMBER = 24;
    private float score_;
    /**
     * <code>optional float score = 24;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional float score = 24;</code>
     *
     * <pre>
     *试题分数
     * </pre>
     */
    public float getScore() {
      return score_;
    }

    public static final int POINTLIST_FIELD_NUMBER = 25;
    private java.util.List<com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto> pointList_;
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    public java.util.List<com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto> getPointListList() {
      return pointList_;
    }
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    public java.util.List<? extends com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder>
    getPointListOrBuilderList() {
      return pointList_;
    }
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    public int getPointListCount() {
      return pointList_.size();
    }
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto getPointList(int index) {
      return pointList_.get(index);
    }
    /**
     * <code>repeated .KnowledgeProto pointList = 25;</code>
     *
     * <pre>
     *多知识点存储
     * </pre>
     */
    public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder getPointListOrBuilder(
            int index) {
      return pointList_.get(index);
    }

    public static final int EXTEND_FIELD_NUMBER = 26;
    private java.lang.Object extend_;
    /**
     * <code>optional string extend = 26;</code>
     *
     * <pre>
     *拓展
     * </pre>
     */
    public boolean hasExtend() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional string extend = 26;</code>
     *
     * <pre>
     *拓展
     * </pre>
     */
    public java.lang.String getExtend() {
      java.lang.Object ref = extend_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          extend_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string extend = 26;</code>
     *
     * <pre>
     *拓展
     * </pre>
     */
    public com.google.protobuf.ByteString
    getExtendBytes() {
      java.lang.Object ref = extend_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        extend_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      id_ = 0;
      type_ = 0;
      stem_ = "";
      from_ = "";
      year_ = 0;
      area_ = 0;
      status_ = 0;
      require_ = "";
      scoreExplain_ = "";
      referAnalysis_ = "";
      answerRequire_ = "";
      examPoint_ = "";
      solvingIdea_ = "";
      materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      difficult_ = 0;
      parent_ = 0;
      subject_ = 0;
      mode_ = 0;
      createTime_ = 0L;
      createBy_ = 0L;
      teachType_ = "";
      maxWordCount_ = 0;
      minWordCount_ = 0;
      score_ = 0F;
      pointList_ = java.util.Collections.emptyList();
      extend_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStem()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasArea()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequire()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasScoreExplain()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReferAnalysis()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAnswerRequire()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExamPoint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSolvingIdea()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDifficult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSubject()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateBy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getStemBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFromBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, year_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, area_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getRequireBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getScoreExplainBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getReferAnalysisBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getAnswerRequireBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getExamPointBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getSolvingIdeaBytes());
      }
      for (int i = 0; i < materials_.size(); i++) {
        output.writeBytes(14, materials_.getByteString(i));
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(15, difficult_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(16, parent_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(17, subject_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(18, mode_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(19, createTime_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(20, createBy_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBytes(21, getTeachTypeBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(22, maxWordCount_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(23, minWordCount_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeFloat(24, score_);
      }
      for (int i = 0; i < pointList_.size(); i++) {
        output.writeMessage(25, pointList_.get(i));
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeBytes(26, getExtendBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(3, getStemBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(4, getFromBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(5, year_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(6, area_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(7, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(8, getRequireBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(9, getScoreExplainBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(10, getReferAnalysisBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(11, getAnswerRequireBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(12, getExamPointBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(13, getSolvingIdeaBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < materials_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeBytesSizeNoTag(materials_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getMaterialsList().size();
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(15, difficult_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(16, parent_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(17, subject_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(18, mode_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(19, createTime_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(20, createBy_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(21, getTeachTypeBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(22, maxWordCount_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(23, minWordCount_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(24, score_);
      }
      for (int i = 0; i < pointList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(25, pointList_.get(i));
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(26, getExtendBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GenericSubjectiveQuestion}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:GenericSubjectiveQuestion)
            com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.internal_static_GenericSubjectiveQuestion_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.internal_static_GenericSubjectiveQuestion_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion.class, com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion.Builder.class);
      }

      // Construct using com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPointListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        stem_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        from_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        year_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        area_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        require_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        scoreExplain_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        referAnalysis_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        answerRequire_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        examPoint_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        solvingIdea_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        difficult_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        parent_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        subject_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        createBy_ = 0L;
        bitField0_ = (bitField0_ & ~0x00080000);
        teachType_ = "";
        bitField0_ = (bitField0_ & ~0x00100000);
        maxWordCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        minWordCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00800000);
        if (pointListBuilder_ == null) {
          pointList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x01000000);
        } else {
          pointListBuilder_.clear();
        }
        extend_ = "";
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.internal_static_GenericSubjectiveQuestion_descriptor;
      }

      public com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion getDefaultInstanceForType() {
        return com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion.getDefaultInstance();
      }

      public com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion build() {
        com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion buildPartial() {
        com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion result = new com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.stem_ = stem_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.from_ = from_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.year_ = year_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.area_ = area_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.require_ = require_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.scoreExplain_ = scoreExplain_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.referAnalysis_ = referAnalysis_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.answerRequire_ = answerRequire_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.examPoint_ = examPoint_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.solvingIdea_ = solvingIdea_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          materials_ = materials_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.materials_ = materials_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.difficult_ = difficult_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.parent_ = parent_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.subject_ = subject_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.createBy_ = createBy_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.teachType_ = teachType_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.maxWordCount_ = maxWordCount_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.minWordCount_ = minWordCount_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.score_ = score_;
        if (pointListBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000)) {
            pointList_ = java.util.Collections.unmodifiableList(pointList_);
            bitField0_ = (bitField0_ & ~0x01000000);
          }
          result.pointList_ = pointList_;
        } else {
          result.pointList_ = pointListBuilder_.build();
        }
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.extend_ = extend_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion) {
          return mergeFrom((com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion other) {
        if (other == com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasStem()) {
          bitField0_ |= 0x00000004;
          stem_ = other.stem_;
          onChanged();
        }
        if (other.hasFrom()) {
          bitField0_ |= 0x00000008;
          from_ = other.from_;
          onChanged();
        }
        if (other.hasYear()) {
          setYear(other.getYear());
        }
        if (other.hasArea()) {
          setArea(other.getArea());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRequire()) {
          bitField0_ |= 0x00000080;
          require_ = other.require_;
          onChanged();
        }
        if (other.hasScoreExplain()) {
          bitField0_ |= 0x00000100;
          scoreExplain_ = other.scoreExplain_;
          onChanged();
        }
        if (other.hasReferAnalysis()) {
          bitField0_ |= 0x00000200;
          referAnalysis_ = other.referAnalysis_;
          onChanged();
        }
        if (other.hasAnswerRequire()) {
          bitField0_ |= 0x00000400;
          answerRequire_ = other.answerRequire_;
          onChanged();
        }
        if (other.hasExamPoint()) {
          bitField0_ |= 0x00000800;
          examPoint_ = other.examPoint_;
          onChanged();
        }
        if (other.hasSolvingIdea()) {
          bitField0_ |= 0x00001000;
          solvingIdea_ = other.solvingIdea_;
          onChanged();
        }
        if (!other.materials_.isEmpty()) {
          if (materials_.isEmpty()) {
            materials_ = other.materials_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureMaterialsIsMutable();
            materials_.addAll(other.materials_);
          }
          onChanged();
        }
        if (other.hasDifficult()) {
          setDifficult(other.getDifficult());
        }
        if (other.hasParent()) {
          setParent(other.getParent());
        }
        if (other.hasSubject()) {
          setSubject(other.getSubject());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasCreateBy()) {
          setCreateBy(other.getCreateBy());
        }
        if (other.hasTeachType()) {
          bitField0_ |= 0x00100000;
          teachType_ = other.teachType_;
          onChanged();
        }
        if (other.hasMaxWordCount()) {
          setMaxWordCount(other.getMaxWordCount());
        }
        if (other.hasMinWordCount()) {
          setMinWordCount(other.getMinWordCount());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (pointListBuilder_ == null) {
          if (!other.pointList_.isEmpty()) {
            if (pointList_.isEmpty()) {
              pointList_ = other.pointList_;
              bitField0_ = (bitField0_ & ~0x01000000);
            } else {
              ensurePointListIsMutable();
              pointList_.addAll(other.pointList_);
            }
            onChanged();
          }
        } else {
          if (!other.pointList_.isEmpty()) {
            if (pointListBuilder_.isEmpty()) {
              pointListBuilder_.dispose();
              pointListBuilder_ = null;
              pointList_ = other.pointList_;
              bitField0_ = (bitField0_ & ~0x01000000);
              pointListBuilder_ =
                      com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                              getPointListFieldBuilder() : null;
            } else {
              pointListBuilder_.addAllMessages(other.pointList_);
            }
          }
        }
        if (other.hasExtend()) {
          bitField0_ |= 0x02000000;
          extend_ = other.extend_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {

          return false;
        }
        if (!hasType()) {

          return false;
        }
        if (!hasStem()) {

          return false;
        }
        if (!hasFrom()) {

          return false;
        }
        if (!hasYear()) {

          return false;
        }
        if (!hasArea()) {

          return false;
        }
        if (!hasStatus()) {

          return false;
        }
        if (!hasRequire()) {

          return false;
        }
        if (!hasScoreExplain()) {

          return false;
        }
        if (!hasReferAnalysis()) {

          return false;
        }
        if (!hasAnswerRequire()) {

          return false;
        }
        if (!hasExamPoint()) {

          return false;
        }
        if (!hasSolvingIdea()) {

          return false;
        }
        if (!hasDifficult()) {

          return false;
        }
        if (!hasSubject()) {

          return false;
        }
        if (!hasMode()) {

          return false;
        }
        if (!hasCreateTime()) {

          return false;
        }
        if (!hasCreateBy()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.huatu.ztk.question.protobuf.GenericSubjectiveQuestionProtos.GenericSubjectiveQuestion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *试题id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *试题id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *试题id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *试题id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *试题类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *试题类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *试题类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       *试题类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object stem_ = "";
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public boolean hasStem() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public java.lang.String getStem() {
        java.lang.Object ref = stem_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stem_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public com.google.protobuf.ByteString
      getStemBytes() {
        java.lang.Object ref = stem_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          stem_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public Builder setStem(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        stem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public Builder clearStem() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stem_ = getDefaultInstance().getStem();
        onChanged();
        return this;
      }
      /**
       * <code>required string stem = 3;</code>
       *
       * <pre>
       *题干
       * </pre>
       */
      public Builder setStemBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        stem_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object from_ = "";
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public boolean hasFrom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public java.lang.String getFrom() {
        java.lang.Object ref = from_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            from_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public com.google.protobuf.ByteString
      getFromBytes() {
        java.lang.Object ref = from_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          from_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public Builder setFrom(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public Builder clearFrom() {
        bitField0_ = (bitField0_ & ~0x00000008);
        from_ = getDefaultInstance().getFrom();
        onChanged();
        return this;
      }
      /**
       * <code>required string from = 4;</code>
       *
       * <pre>
       *来源
       * </pre>
       */
      public Builder setFromBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        from_ = value;
        onChanged();
        return this;
      }

      private int year_ ;
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public boolean hasYear() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public int getYear() {
        return year_;
      }
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public Builder setYear(int value) {
        bitField0_ |= 0x00000010;
        year_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 year = 5;</code>
       *
       * <pre>
       *试题年份
       * </pre>
       */
      public Builder clearYear() {
        bitField0_ = (bitField0_ & ~0x00000010);
        year_ = 0;
        onChanged();
        return this;
      }

      private int area_ ;
      /**
       * <code>required int32 area = 6;</code>
       *
       * <pre>
       *试题所属地区
       * </pre>
       */
      public boolean hasArea() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 area = 6;</code>
       *
       * <pre>
       *试题所属地区
       * </pre>
       */
      public int getArea() {
        return area_;
      }
      /**
       * <code>required int32 area = 6;</code>
       *
       * <pre>
       *试题所属地区
       * </pre>
       */
      public Builder setArea(int value) {
        bitField0_ |= 0x00000020;
        area_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 area = 6;</code>
       *
       * <pre>
       *试题所属地区
       * </pre>
       */
      public Builder clearArea() {
        bitField0_ = (bitField0_ & ~0x00000020);
        area_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>required int32 status = 7;</code>
       *
       * <pre>
       *试题状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 status = 7;</code>
       *
       * <pre>
       *试题状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 7;</code>
       *
       * <pre>
       *试题状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000040;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 status = 7;</code>
       *
       * <pre>
       *试题状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        status_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object require_ = "";
      /**
       * <code>required string require = 8;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public boolean hasRequire() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required string require = 8;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public java.lang.String getRequire() {
        java.lang.Object ref = require_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            require_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string require = 8;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public com.google.protobuf.ByteString
      getRequireBytes() {
        java.lang.Object ref = require_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          require_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string require = 8;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public Builder setRequire(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        require_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string require = 8;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public Builder clearRequire() {
        bitField0_ = (bitField0_ & ~0x00000080);
        require_ = getDefaultInstance().getRequire();
        onChanged();
        return this;
      }
      /**
       * <code>required string require = 8;</code>
       *
       * <pre>
       *题目要求
       * </pre>
       */
      public Builder setRequireBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        require_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object scoreExplain_ = "";
      /**
       * <code>required string scoreExplain = 9;</code>
       *
       * <pre>
       *赋分说明
       * </pre>
       */
      public boolean hasScoreExplain() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required string scoreExplain = 9;</code>
       *
       * <pre>
       *赋分说明
       * </pre>
       */
      public java.lang.String getScoreExplain() {
        java.lang.Object ref = scoreExplain_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            scoreExplain_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string scoreExplain = 9;</code>
       *
       * <pre>
       *赋分说明
       * </pre>
       */
      public com.google.protobuf.ByteString
      getScoreExplainBytes() {
        java.lang.Object ref = scoreExplain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          scoreExplain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string scoreExplain = 9;</code>
       *
       * <pre>
       *赋分说明
       * </pre>
       */
      public Builder setScoreExplain(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        scoreExplain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string scoreExplain = 9;</code>
       *
       * <pre>
       *赋分说明
       * </pre>
       */
      public Builder clearScoreExplain() {
        bitField0_ = (bitField0_ & ~0x00000100);
        scoreExplain_ = getDefaultInstance().getScoreExplain();
        onChanged();
        return this;
      }
      /**
       * <code>required string scoreExplain = 9;</code>
       *
       * <pre>
       *赋分说明
       * </pre>
       */
      public Builder setScoreExplainBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        scoreExplain_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object referAnalysis_ = "";
      /**
       * <code>required string referAnalysis = 10;</code>
       *
       * <pre>
       *参考解析
       * </pre>
       */
      public boolean hasReferAnalysis() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required string referAnalysis = 10;</code>
       *
       * <pre>
       *参考解析
       * </pre>
       */
      public java.lang.String getReferAnalysis() {
        java.lang.Object ref = referAnalysis_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            referAnalysis_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string referAnalysis = 10;</code>
       *
       * <pre>
       *参考解析
       * </pre>
       */
      public com.google.protobuf.ByteString
      getReferAnalysisBytes() {
        java.lang.Object ref = referAnalysis_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          referAnalysis_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string referAnalysis = 10;</code>
       *
       * <pre>
       *参考解析
       * </pre>
       */
      public Builder setReferAnalysis(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        referAnalysis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string referAnalysis = 10;</code>
       *
       * <pre>
       *参考解析
       * </pre>
       */
      public Builder clearReferAnalysis() {
        bitField0_ = (bitField0_ & ~0x00000200);
        referAnalysis_ = getDefaultInstance().getReferAnalysis();
        onChanged();
        return this;
      }
      /**
       * <code>required string referAnalysis = 10;</code>
       *
       * <pre>
       *参考解析
       * </pre>
       */
      public Builder setReferAnalysisBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        referAnalysis_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object answerRequire_ = "";
      /**
       * <code>required string answerRequire = 11;</code>
       *
       * <pre>
       *答题要求
       * </pre>
       */
      public boolean hasAnswerRequire() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required string answerRequire = 11;</code>
       *
       * <pre>
       *答题要求
       * </pre>
       */
      public java.lang.String getAnswerRequire() {
        java.lang.Object ref = answerRequire_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            answerRequire_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string answerRequire = 11;</code>
       *
       * <pre>
       *答题要求
       * </pre>
       */
      public com.google.protobuf.ByteString
      getAnswerRequireBytes() {
        java.lang.Object ref = answerRequire_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          answerRequire_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string answerRequire = 11;</code>
       *
       * <pre>
       *答题要求
       * </pre>
       */
      public Builder setAnswerRequire(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        answerRequire_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string answerRequire = 11;</code>
       *
       * <pre>
       *答题要求
       * </pre>
       */
      public Builder clearAnswerRequire() {
        bitField0_ = (bitField0_ & ~0x00000400);
        answerRequire_ = getDefaultInstance().getAnswerRequire();
        onChanged();
        return this;
      }
      /**
       * <code>required string answerRequire = 11;</code>
       *
       * <pre>
       *答题要求
       * </pre>
       */
      public Builder setAnswerRequireBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        answerRequire_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object examPoint_ = "";
      /**
       * <code>required string examPoint = 12;</code>
       *
       * <pre>
       *审题要求
       * </pre>
       */
      public boolean hasExamPoint() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required string examPoint = 12;</code>
       *
       * <pre>
       *审题要求
       * </pre>
       */
      public java.lang.String getExamPoint() {
        java.lang.Object ref = examPoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            examPoint_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string examPoint = 12;</code>
       *
       * <pre>
       *审题要求
       * </pre>
       */
      public com.google.protobuf.ByteString
      getExamPointBytes() {
        java.lang.Object ref = examPoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          examPoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string examPoint = 12;</code>
       *
       * <pre>
       *审题要求
       * </pre>
       */
      public Builder setExamPoint(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        examPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string examPoint = 12;</code>
       *
       * <pre>
       *审题要求
       * </pre>
       */
      public Builder clearExamPoint() {
        bitField0_ = (bitField0_ & ~0x00000800);
        examPoint_ = getDefaultInstance().getExamPoint();
        onChanged();
        return this;
      }
      /**
       * <code>required string examPoint = 12;</code>
       *
       * <pre>
       *审题要求
       * </pre>
       */
      public Builder setExamPointBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        examPoint_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object solvingIdea_ = "";
      /**
       * <code>required string solvingIdea = 13;</code>
       *
       * <pre>
       *解题思路
       * </pre>
       */
      public boolean hasSolvingIdea() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required string solvingIdea = 13;</code>
       *
       * <pre>
       *解题思路
       * </pre>
       */
      public java.lang.String getSolvingIdea() {
        java.lang.Object ref = solvingIdea_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            solvingIdea_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string solvingIdea = 13;</code>
       *
       * <pre>
       *解题思路
       * </pre>
       */
      public com.google.protobuf.ByteString
      getSolvingIdeaBytes() {
        java.lang.Object ref = solvingIdea_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          solvingIdea_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string solvingIdea = 13;</code>
       *
       * <pre>
       *解题思路
       * </pre>
       */
      public Builder setSolvingIdea(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        solvingIdea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string solvingIdea = 13;</code>
       *
       * <pre>
       *解题思路
       * </pre>
       */
      public Builder clearSolvingIdea() {
        bitField0_ = (bitField0_ & ~0x00001000);
        solvingIdea_ = getDefaultInstance().getSolvingIdea();
        onChanged();
        return this;
      }
      /**
       * <code>required string solvingIdea = 13;</code>
       *
       * <pre>
       *解题思路
       * </pre>
       */
      public Builder setSolvingIdeaBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        solvingIdea_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMaterialsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          materials_ = new com.google.protobuf.LazyStringArrayList(materials_);
          bitField0_ |= 0x00002000;
        }
      }
      /**
       * <code>repeated string materials = 14;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
      getMaterialsList() {
        return materials_.getUnmodifiableView();
      }
      /**
       * <code>repeated string materials = 14;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public int getMaterialsCount() {
        return materials_.size();
      }
      /**
       * <code>repeated string materials = 14;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public java.lang.String getMaterials(int index) {
        return materials_.get(index);
      }
      /**
       * <code>repeated string materials = 14;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public com.google.protobuf.ByteString
      getMaterialsBytes(int index) {
        return materials_.getByteString(index);
      }
      /**
       * <code>repeated string materials = 14;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public Builder setMaterials(
              int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMaterialsIsMutable();
        materials_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 14;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public Builder addMaterials(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMaterialsIsMutable();
        materials_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 14;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public Builder addAllMaterials(
              java.lang.Iterable<java.lang.String> values) {
        ensureMaterialsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, materials_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 14;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public Builder clearMaterials() {
        materials_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string materials = 14;</code>
       *
       * <pre>
       *材料
       * </pre>
       */
      public Builder addMaterialsBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMaterialsIsMutable();
        materials_.add(value);
        onChanged();
        return this;
      }

      private int difficult_ ;
      /**
       * <code>required int32 difficult = 15;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public boolean hasDifficult() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 difficult = 15;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public int getDifficult() {
        return difficult_;
      }
      /**
       * <code>required int32 difficult = 15;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public Builder setDifficult(int value) {
        bitField0_ |= 0x00004000;
        difficult_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 difficult = 15;</code>
       *
       * <pre>
       *难度系数
       * </pre>
       */
      public Builder clearDifficult() {
        bitField0_ = (bitField0_ & ~0x00004000);
        difficult_ = 0;
        onChanged();
        return this;
      }

      private int parent_ ;
      /**
       * <code>optional int32 parent = 16;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public boolean hasParent() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 parent = 16;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public int getParent() {
        return parent_;
      }
      /**
       * <code>optional int32 parent = 16;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public Builder setParent(int value) {
        bitField0_ |= 0x00008000;
        parent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 parent = 16;</code>
       *
       * <pre>
       *所属复合题id
       * </pre>
       */
      public Builder clearParent() {
        bitField0_ = (bitField0_ & ~0x00008000);
        parent_ = 0;
        onChanged();
        return this;
      }

      private int subject_ ;
      /**
       * <code>required int32 subject = 17;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public boolean hasSubject() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int32 subject = 17;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public int getSubject() {
        return subject_;
      }
      /**
       * <code>required int32 subject = 17;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public Builder setSubject(int value) {
        bitField0_ |= 0x00010000;
        subject_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 subject = 17;</code>
       *
       * <pre>
       *考试科目
       * </pre>
       */
      public Builder clearSubject() {
        bitField0_ = (bitField0_ & ~0x00010000);
        subject_ = 0;
        onChanged();
        return this;
      }

      private int mode_ ;
      /**
       * <code>required int32 mode = 18;</code>
       *
       * <pre>
       *试题类型 真题,模拟题
       * </pre>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 mode = 18;</code>
       *
       * <pre>
       *试题类型 真题,模拟题
       * </pre>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>required int32 mode = 18;</code>
       *
       * <pre>
       *试题类型 真题,模拟题
       * </pre>
       */
      public Builder setMode(int value) {
        bitField0_ |= 0x00020000;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mode = 18;</code>
       *
       * <pre>
       *试题类型 真题,模拟题
       * </pre>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00020000);
        mode_ = 0;
        onChanged();
        return this;
      }

      private long createTime_ ;
      /**
       * <code>required int64 createTime = 19;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required int64 createTime = 19;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>required int64 createTime = 19;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00040000;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 createTime = 19;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00040000);
        createTime_ = 0L;
        onChanged();
        return this;
      }

      private long createBy_ ;
      /**
       * <code>required int64 createBy = 20;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public boolean hasCreateBy() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>required int64 createBy = 20;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public long getCreateBy() {
        return createBy_;
      }
      /**
       * <code>required int64 createBy = 20;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder setCreateBy(long value) {
        bitField0_ |= 0x00080000;
        createBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 createBy = 20;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder clearCreateBy() {
        bitField0_ = (bitField0_ & ~0x00080000);
        createBy_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object teachType_ = "";
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public boolean hasTeachType() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public java.lang.String getTeachType() {
        java.lang.Object ref = teachType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teachType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public com.google.protobuf.ByteString
      getTeachTypeBytes() {
        java.lang.Object ref = teachType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          teachType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public Builder setTeachType(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00100000;
        teachType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public Builder clearTeachType() {
        bitField0_ = (bitField0_ & ~0x00100000);
        teachType_ = getDefaultInstance().getTeachType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string teachType = 21;</code>
       *
       * <pre>
       *教研题型
       * </pre>
       */
      public Builder setTeachTypeBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00100000;
        teachType_ = value;
        onChanged();
        return this;
      }

      private int maxWordCount_ ;
      /**
       * <code>optional int32 maxWordCount = 22;</code>
       *
       * <pre>
       *最大字数限制
       * </pre>
       */
      public boolean hasMaxWordCount() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 maxWordCount = 22;</code>
       *
       * <pre>
       *最大字数限制
       * </pre>
       */
      public int getMaxWordCount() {
        return maxWordCount_;
      }
      /**
       * <code>optional int32 maxWordCount = 22;</code>
       *
       * <pre>
       *最大字数限制
       * </pre>
       */
      public Builder setMaxWordCount(int value) {
        bitField0_ |= 0x00200000;
        maxWordCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxWordCount = 22;</code>
       *
       * <pre>
       *最大字数限制
       * </pre>
       */
      public Builder clearMaxWordCount() {
        bitField0_ = (bitField0_ & ~0x00200000);
        maxWordCount_ = 0;
        onChanged();
        return this;
      }

      private int minWordCount_ ;
      /**
       * <code>optional int32 minWordCount = 23;</code>
       *
       * <pre>
       *最小字数限制
       * </pre>
       */
      public boolean hasMinWordCount() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 minWordCount = 23;</code>
       *
       * <pre>
       *最小字数限制
       * </pre>
       */
      public int getMinWordCount() {
        return minWordCount_;
      }
      /**
       * <code>optional int32 minWordCount = 23;</code>
       *
       * <pre>
       *最小字数限制
       * </pre>
       */
      public Builder setMinWordCount(int value) {
        bitField0_ |= 0x00400000;
        minWordCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 minWordCount = 23;</code>
       *
       * <pre>
       *最小字数限制
       * </pre>
       */
      public Builder clearMinWordCount() {
        bitField0_ = (bitField0_ & ~0x00400000);
        minWordCount_ = 0;
        onChanged();
        return this;
      }

      private float score_ ;
      /**
       * <code>optional float score = 24;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional float score = 24;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 24;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00800000;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 24;</code>
       *
       * <pre>
       *试题分数
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00800000);
        score_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto> pointList_ =
              java.util.Collections.emptyList();
      private void ensurePointListIsMutable() {
        if (!((bitField0_ & 0x01000000) == 0x01000000)) {
          pointList_ = new java.util.ArrayList<com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto>(pointList_);
          bitField0_ |= 0x01000000;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
              com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder> pointListBuilder_;

      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public java.util.List<com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto> getPointListList() {
        if (pointListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pointList_);
        } else {
          return pointListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public int getPointListCount() {
        if (pointListBuilder_ == null) {
          return pointList_.size();
        } else {
          return pointListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto getPointList(int index) {
        if (pointListBuilder_ == null) {
          return pointList_.get(index);
        } else {
          return pointListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder setPointList(
              int index, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto value) {
        if (pointListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointListIsMutable();
          pointList_.set(index, value);
          onChanged();
        } else {
          pointListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder setPointList(
              int index, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder builderForValue) {
        if (pointListBuilder_ == null) {
          ensurePointListIsMutable();
          pointList_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder addPointList(com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto value) {
        if (pointListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointListIsMutable();
          pointList_.add(value);
          onChanged();
        } else {
          pointListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder addPointList(
              int index, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto value) {
        if (pointListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointListIsMutable();
          pointList_.add(index, value);
          onChanged();
        } else {
          pointListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder addPointList(
              com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder builderForValue) {
        if (pointListBuilder_ == null) {
          ensurePointListIsMutable();
          pointList_.add(builderForValue.build());
          onChanged();
        } else {
          pointListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder addPointList(
              int index, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder builderForValue) {
        if (pointListBuilder_ == null) {
          ensurePointListIsMutable();
          pointList_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder addAllPointList(
              java.lang.Iterable<? extends com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto> values) {
        if (pointListBuilder_ == null) {
          ensurePointListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, pointList_);
          onChanged();
        } else {
          pointListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder clearPointList() {
        if (pointListBuilder_ == null) {
          pointList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x01000000);
          onChanged();
        } else {
          pointListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public Builder removePointList(int index) {
        if (pointListBuilder_ == null) {
          ensurePointListIsMutable();
          pointList_.remove(index);
          onChanged();
        } else {
          pointListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder getPointListBuilder(
              int index) {
        return getPointListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder getPointListOrBuilder(
              int index) {
        if (pointListBuilder_ == null) {
          return pointList_.get(index);  } else {
          return pointListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public java.util.List<? extends com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder>
      getPointListOrBuilderList() {
        if (pointListBuilder_ != null) {
          return pointListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pointList_);
        }
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder addPointListBuilder() {
        return getPointListFieldBuilder().addBuilder(
                com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.getDefaultInstance());
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder addPointListBuilder(
              int index) {
        return getPointListFieldBuilder().addBuilder(
                index, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.getDefaultInstance());
      }
      /**
       * <code>repeated .KnowledgeProto pointList = 25;</code>
       *
       * <pre>
       *多知识点存储
       * </pre>
       */
      public java.util.List<com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder>
      getPointListBuilderList() {
        return getPointListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
              com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder>
      getPointListFieldBuilder() {
        if (pointListBuilder_ == null) {
          pointListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProto.Builder, com.huatu.ztk.question.protobuf.KnowledgeProtos.KnowledgeProtoOrBuilder>(
                  pointList_,
                  ((bitField0_ & 0x01000000) == 0x01000000),
                  getParentForChildren(),
                  isClean());
          pointList_ = null;
        }
        return pointListBuilder_;
      }

      private java.lang.Object extend_ = "";
      /**
       * <code>optional string extend = 26;</code>
       *
       * <pre>
       *拓展
       * </pre>
       */
      public boolean hasExtend() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional string extend = 26;</code>
       *
       * <pre>
       *拓展
       * </pre>
       */
      public java.lang.String getExtend() {
        java.lang.Object ref = extend_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            extend_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string extend = 26;</code>
       *
       * <pre>
       *拓展
       * </pre>
       */
      public com.google.protobuf.ByteString
      getExtendBytes() {
        java.lang.Object ref = extend_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          extend_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string extend = 26;</code>
       *
       * <pre>
       *拓展
       * </pre>
       */
      public Builder setExtend(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x02000000;
        extend_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string extend = 26;</code>
       *
       * <pre>
       *拓展
       * </pre>
       */
      public Builder clearExtend() {
        bitField0_ = (bitField0_ & ~0x02000000);
        extend_ = getDefaultInstance().getExtend();
        onChanged();
        return this;
      }
      /**
       * <code>optional string extend = 26;</code>
       *
       * <pre>
       *拓展
       * </pre>
       */
      public Builder setExtendBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x02000000;
        extend_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GenericSubjectiveQuestion)
    }

    static {
      defaultInstance = new GenericSubjectiveQuestion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GenericSubjectiveQuestion)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_GenericSubjectiveQuestion_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_GenericSubjectiveQuestion_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
          descriptor;
  static {
    java.lang.String[] descriptorData = {
            "\n\037GenericSubjectiveQuestion.proto\032\017Knowl" +
                    "edge.proto\"\367\003\n\031GenericSubjectiveQuestion" +
                    "\022\n\n\002id\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\022\014\n\004stem\030\003 \002(\t" +
                    "\022\014\n\004from\030\004 \002(\t\022\014\n\004year\030\005 \002(\005\022\014\n\004area\030\006 \002" +
                    "(\005\022\016\n\006status\030\007 \002(\005\022\017\n\007require\030\010 \002(\t\022\024\n\014s" +
                    "coreExplain\030\t \002(\t\022\025\n\rreferAnalysis\030\n \002(\t" +
                    "\022\025\n\ranswerRequire\030\013 \002(\t\022\021\n\texamPoint\030\014 \002" +
                    "(\t\022\023\n\013solvingIdea\030\r \002(\t\022\021\n\tmaterials\030\016 \003" +
                    "(\t\022\021\n\tdifficult\030\017 \002(\005\022\016\n\006parent\030\020 \001(\005\022\017\n" +
                    "\007subject\030\021 \002(\005\022\014\n\004mode\030\022 \002(\005\022\022\n\ncreateTi",
            "me\030\023 \002(\003\022\020\n\010createBy\030\024 \002(\003\022\021\n\tteachType\030" +
                    "\025 \001(\t\022\024\n\014maxWordCount\030\026 \001(\005\022\024\n\014minWordCo" +
                    "unt\030\027 \001(\005\022\r\n\005score\030\030 \001(\002\022\"\n\tpointList\030\031 " +
                    "\003(\0132\017.KnowledgeProto\022\016\n\006extend\030\032 \001(\tBB\n\037" +
                    "com.huatu.ztk.question.protobufB\037Generic" +
                    "SubjectiveQuestionProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[] {
                            com.huatu.ztk.question.protobuf.KnowledgeProtos.getDescriptor(),
                    }, assigner);
    internal_static_GenericSubjectiveQuestion_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_GenericSubjectiveQuestion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_GenericSubjectiveQuestion_descriptor,
            new java.lang.String[] { "Id", "Type", "Stem", "From", "Year", "Area", "Status", "Require", "ScoreExplain", "ReferAnalysis", "AnswerRequire", "ExamPoint", "SolvingIdea", "Materials", "Difficult", "Parent", "Subject", "Mode", "CreateTime", "CreateBy", "TeachType", "MaxWordCount", "MinWordCount", "Score", "PointList", "Extend", });
    com.huatu.ztk.question.protobuf.KnowledgeProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
