<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">
    <!-- 连接服务配置  -->
    <rabbit:connection-factory id="connectionFactory"
                               addresses="${rabbitmq.address}"
                               username="${rabbitmq.username}"
                               password="${rabbitmq.password}"/>
    <rabbit:admin connection-factory="connectionFactory"/>
    <bean id="json"
          class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />
    <!-- spring template声明 -->
    <rabbit:template id="rabbitTemplate" connection-factory="connectionFactory" message-converter="json"/>
    <!--用户课堂练习提交数据列表-->
    <rabbit:queue id="submit_course_answer_data" durable="true" auto-declare="true" name="submit_course_answer_data"/>
    <!--声明队列， 如果队列不存在，auto-declare="true"会自动创建队列-->
    <rabbit:queue id="v_pastpaper_info" durable="true" auto-declare="true" name="v_pastpaper_info"/>
    <bean id="pastpaperSyncTask" class="com.huatu.ztk.paper.task.PastpaperSyncTask"></bean>
    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="v_pastpaper_info" ref="pastpaperSyncTask"/>
    </rabbit:listener-container>


    <!--声明队列， 如果队列不存在，auto-declare="true"会自动创建队列-->
    <rabbit:queue id="v_testpaper_info" durable="true" auto-declare="true" name="v_testpaper_info"/>
    <bean id="testpaperSyncTask" class="com.huatu.ztk.paper.task.TestpaperSyncTask"></bean>
    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="v_testpaper_info" ref="testpaperSyncTask"/>
    </rabbit:listener-container>


    <!--<rabbit:queue id="reward_action_queue" durable="true" auto-declare="true" name="reward_action_queue"/>-->



    <!--模考大赛交卷队列-->
    <rabbit:queue id="submit_match_answercard" durable="true" auto-declare="true" name="submit_match_answercard"/>
    <rabbit:queue id="submit_practice_answercard" durable="true" auto-declare="true" name="submit_practice_answercard"/>
    <bean id="matchAnswerCardSubmitTask" class="com.huatu.ztk.paper.task.MatchAnswerCardSubmitTask"></bean>
    <bean id="reCountAnswerCardScoreTask" class="com.huatu.ztk.paper.task.ReCountAnswerCardScoreTask"></bean>
    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="submit_match_answercard" ref="matchAnswerCardSubmitTask"/>
        <rabbit:listener queues="submit_practice_answercard" ref="reCountAnswerCardScoreTask"/>
    </rabbit:listener-container>

	<!-- 阶段测试交卷上报 -->
    <rabbit:queue id="period_test_submit_card_info" durable="true" auto-declare="true" name="period_test_submit_card_info"/>
    
    <!-- 录播随堂练数据上报 -->
    <rabbit:queue id="course_breakpoint_practice_save_db_queue" durable="true" auto-declare="true" name="course_breakpoint_practice_save_db_queue"/>

    <rabbit:fanout-exchange id="submit_practice_exchange" name="submit_practice_exchange" auto-declare="true" durable="true" auto-delete="false" >
        <rabbit:bindings>
            <rabbit:binding queue="submit_practice_answercard"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>
    <!-- <rabbit:fanout-exchange id="answer-card" name="answer-card" auto-declare="true" durable="false" auto-delete="false" ></rabbit:fanout-exchange>
 -->

</beans>