<?xml version="1.0" encoding="UTF-8"?>

<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->

<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->

<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->

<configuration status="WARN" monitorInterval="30">

 <Properties>
        <Property name="LOG_EXCEPTION_CONVERSION_WORD">%xwEx</Property>
        <Property name="LOG_LEVEL_PATTERN">%5p</Property>
        <Property name="LOG_PATTERN">%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN} [%15.15t] %C.%M(%L) --> %m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>
    </Properties>

     <!--先定义所有的appender-->

     <appenders>

         <!--这个输出控制台的配置-->

         <console name="Console" target="SYSTEM_OUT">

         <!--输出日志的格式-->

              <PatternLayout charset="UTF-8"
                           pattern="${sys:LOG_PATTERN}"/>
             
              <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->       
              <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>

         </console>


         <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->

         <RollingFile name="RollingFileInfo" fileName="/app/logs/monitor-server/info.log"

                      filePattern="/app/logs/monitor-server/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log.zip">

            
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
 			<PatternLayout charset="UTF-8" pattern="${sys:LOG_PATTERN}"/>

             <Policies>

                 <TimeBasedTriggeringPolicy/>

                 <SizeBasedTriggeringPolicy size="100 MB"/>

             </Policies>

         </RollingFile>

         <RollingFile name="RollingFileWarn" fileName="/app/logs/monitor-server/warn.log"

                      filePattern="/app/logs/monitor-server/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log.zip">

             <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>

             <PatternLayout charset="UTF-8" pattern="${sys:LOG_PATTERN}"/>

             <Policies>

                 <TimeBasedTriggeringPolicy/>

                 <SizeBasedTriggeringPolicy size="100 MB"/>

             </Policies>

             <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->

             <DefaultRolloverStrategy max="20"/>

         </RollingFile>

         <RollingFile name="RollingFileError" fileName="/app/logs/monitor-server/error.log"

                      filePattern="/app/logs/monitor-server/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log.zip">

             <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>

              <PatternLayout charset="UTF-8" pattern="${sys:LOG_PATTERN}"/>

             <Policies>

                 <TimeBasedTriggeringPolicy/>

                 <SizeBasedTriggeringPolicy size="100 MB"/>

             </Policies>

         </RollingFile>

     </appenders>

     <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->

     <loggers>

         <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->

         <logger name="org.springframework" level="INFO"></logger>

         <logger name="org.mybatis" level="INFO"></logger>

         <root level="info">

             <!-- <appender-ref ref="Console"/> -->

             <appender-ref ref="RollingFileInfo"/>

             <appender-ref ref="RollingFileWarn"/>

             <appender-ref ref="RollingFileError"/>

         </root>

     </loggers>

 </configuration>