server:
  port: 11005
  undertow:
      io-threads: 2
      worker-threads: 20
      buffer-size: 1024

#配置示例
zuul:
  routes:
    api-search-server:
      path: /s/**
      serviceId: ic-search-server
    api-user-server:
      path: /user/**
      serviceId: ic-user-server
    api-tiku-server:
      path: /tk/**
      serviceId: ic-tiku-server
    api-course-server:
      path: /c/**
      url: http://192.168.100.22/c
    api-course-server-o:
      path: /co/**
      serviceId: ic-course-server
    api-share-server-o:
      path: /share/**
      serviceId: ic-share-server
    api-u-server:
      path: /u/**
      serviceId: http://192.168.100.22/u
    api-dtmp-server:
      path: /dtmp/**
      serviceId: ic-dtmp-server
  retryable: true  #路由重试
ribbon:
#  ribbon重试超时时间
  ConnectTimeout: 250
#  建立连接后的超时时间
  ReadTimeout: 10000
#  对所有操作请求都进行重试
  OkToRetryOnAllOperations: true
#  切换实例的重试次数
  MaxAutoRetriesNextServer: 1
#  对当前实例的重试次数
  MaxAutoRetries: 1
  eureka:
      enable: true
spring:
  ### 项目基本信息
  application:
    name: "${server_name}"
  profiles:
    active: "${project.environment}"
  ### http配置
  http:
    encoding:
      charset: UTF-8
      force: true
    multipart:
      max-file-size: 44MB
  redis:
    cluster:
      nodes: 192.168.100.20:6489,192.168.100.20:6589,192.168.100.20:6689
    
  ### jackson配置
  jackson:
    serialization:
      write_dates_as_timestamps: false
      fail_on_empty_beans: false
    deserialization:
      fail_on_unknown_properties: false
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null

  mvc:
    throw-exception-if-no-handler-found: true

  output:
    ansi:
      enabled: always
  #hystrix dashboard的信息收集频率
  cloud:
    hypermedia:
      refresh:
        fixed-delay: 5000
management:
  info.git.mode: full
  security:
    enabled: false
  context-path: /_monitor

hystrix: 
  command: 
    default: 
      execution: 
        timeout: 
          enabled: true 
        isolation: 
          thread: 
            timeoutInMilliseconds: 60000

eureka:
  instance:
    prefer-ip-address: true

---
spring:
  profiles: dev

  application:
     name: ${server_name}-local-dxc

eureka:
  client:
    serviceUrl:
      defaultZone: http://192.168.100.22:11003/eureka/

---
spring:
  profiles: test

  application:
      name: ${server_name}

eureka:
  client:
    serviceUrl:
      defaultZone: http://192.168.100.22:11003/eureka/

---
spring:
  profiles: pre

  application:
    name: ${server_name}

eureka:
  client:
    serviceUrl:
      defaultZone: http://pre.eureka:11003/eureka/

zuul:
  routes:
    api-course-server:
      path: /c/**
      url: http://192.168.100.212/c
    api-u-server:
      path: /u/**
      url: https://ns.huatu.com/u

---
spring:
  profiles: product

  application:
      name: ${server_name}

eureka:
  client:
    serviceUrl:
      defaultZone: http://peer1.eureka:11003/eureka/,http://peer2.eureka:11003/eureka/,http://peer3.eureka:11003/eureka/

zuul:
  routes:
    api-course-server:
      path: /c/**
      url: http://192.168.100.212/c
    api-u-server:
      path: /u/**
      url: https://ns.huatu.com/u