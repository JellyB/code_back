#通用配置（这些配置是没有必要放到apollo去的固定配置[或者增加可读性的配置]，如果容易变动的配置，最好放到apollo里进行配置）

server:
  context-path: /pand
  port: 11145
  compression:
      enabled: true
      mime-types: application/json,application/xml,text/html,text/xml,text/plains
      min-response-size: 2048
#替换Tomcat容器，性能更优
  undertow:
    io-threads: 8
    worker-threads: 248
    buffer-size: 1024

spring:
  ### 项目基本信息
  application:
   #pom中配置
    name: "${server_name}"
  datasource:
    teacher:
      type: com.alibaba.druid.pool.DruidDataSource
    slave:
      type: com.alibaba.druid.pool.DruidDataSource
    master:
      type: com.alibaba.druid.pool.DruidDataSource
    backend:
      type: com.alibaba.druid.pool.DruidDataSource

  profiles:
    #### 只有设置active属性，才会在开发环境加载dev的配置，default：dev不会加载下方配置   最上层pom中
    active: ${project.environment}
  session:
     store-type: redis
     redis:
       namespace: "${server_name}"
  ### http配置
  http:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true
    encoding:
      charset: UTF-8
      force: true

  ### jackson配置
  jackson:
    serialization:
      write_dates_as_timestamps: false
      fail_on_empty_beans: false
    deserialization:
      fail_on_unknown_properties: false
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null

  mvc:
    throw-exception-if-no-handler-found: true
    #### 只允许通过static目录静态资源访问，这样不会有默认的RecourseHandler,而导致无法正常404抛出异常
    #### 使用之后，springboot默认的资源根路径，都需要添加/static前缀
    static-path-pattern: /static/**

  resources:
    static-locations: classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/,classpath:/public/,file:${upload_path}
  ### freemarker配置
#  freemarker:
#    preferFileSystemAccess: true
#    cache: true
#    prefix: classpath:/templates
#    suffix: .ftl
#    content-type: text/html; charset=UTF-8
    # settings:  # 这是一个map,注入到factory的settings中


# pagehelper配置
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

#log日志打印颜色支持
  output:
    ansi:
      enabled: always
#  data:
#    rest:
#      base-path: /admin

logging:
  config: "classpath:config/log4j2-${spring.profiles.active}.xml"

## 监控
info:
  app:
    name: "${server_name}"
    encoding: UTF-8

# 部分监控指标配置已移到配置中心，方便后期统一管理


## spring cloud相关
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  hystrix:
    enabled: true


hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000 # 默认超时时间

endpoints:
  actuator:
    enabled: true
  jmx:
    enabled: false
management:
  info.git.mode: full
  security:
    enabled: false
  context-path: /_monitor
  add-application-context-header: false




## 自定义配置

htonline:
## 开启ResponseBodyAdvice
  wrapper.enabled: true
  httpclient.enabled: false
  okhttp.enabled: true
  executor.enabled: true
  degrade.basePackage: com.huatu.tiku
  cache-manage:
    enabled: true
    basePackage: com.huatu.tiku
    prefix:
      redis: "${spring.application.name}"

# BaseMapper 组件配置信息
mapper:
  mappers:
    - tk.mybatis.mapper.common.Mapper
  safe-update: true   #修改必须有条件
  safe-delete: true   #删除必须有条件
  use-java-type: true #使用java 类型
  check-example-entity-class: true # 检验初始化的example 和 调用的mapper 是否使用的同一个实体




# 不同环境的不同配置，也可以放在apollo，除了开发使用的特殊debug等配置，一般不建议放在这里
---
spring:
  profiles: dev


user-center:
  auth-pass-paths:
    - /back/test
  url: http://localhost:11197


server:
  error:
    include-stacktrace: always
debug: true

---
spring:
  profiles: test

user-center:
  enable: true
  url: http://192.168.100.22:11197
  path: /pand

server:
  error:
    include-stacktrace: always
---
spring:
  profiles: release

---
spring:
  profiles: product

user-center:
  enable: true
  url: http://192.168.100.61:11197
  path: /pand

debug: false